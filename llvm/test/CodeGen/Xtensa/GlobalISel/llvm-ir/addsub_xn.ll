; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=xtensa | FileCheck %s
define i32 @addx2(i32 %a, i32 %b) {
; CHECK-LABEL: addx2:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    addx2 a2, a2, a3
; CHECK-NEXT:    ret.n
entry:
  %shl = shl i32 %a, 1
  %add = add i32 %b, %shl
  ret i32 %add
}

define i32 @addx2_comm(i32 %a, i32 %b) {
; CHECK-LABEL: addx2_comm:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    addx2 a2, a2, a3
; CHECK-NEXT:    ret.n
entry:
  %shl = shl i32 %a, 1
  %add = add i32 %shl, %b
  ret i32 %add
}

define i32 @addx4(i32 %a, i32 %b) {
; CHECK-LABEL: addx4:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    addx4 a2, a2, a3
; CHECK-NEXT:    ret.n
entry:
  %shl = shl i32 %a, 2
  %add = add i32 %b, %shl
  ret i32 %add
}

define i32 @addx4_comm(i32 %a, i32 %b) {
; CHECK-LABEL: addx4_comm:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    addx4 a2, a2, a3
; CHECK-NEXT:    ret.n
entry:
  %shl = shl i32 %a, 2
  %add = add i32 %shl, %b
  ret i32 %add
}

define i32 @addx8(i32 %a, i32 %b) {
; CHECK-LABEL: addx8:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    addx8 a2, a2, a3
; CHECK-NEXT:    ret.n
entry:
  %shl = shl i32 %a, 3
  %add = add i32 %b, %shl
  ret i32 %add
}

define i32 @addx8_comm(i32 %a, i32 %b) {
; CHECK-LABEL: addx8_comm:
; CHECK:       # %bb.0: # %entry
; CHECK-NEXT:    addx8 a2, a2, a3
; CHECK-NEXT:    ret.n
entry:
  %shl = shl i32 %a, 3
  %add = add i32 %shl, %b
  ret i32 %add
}

define i32 @subx2(i32 %a, i32 %b) {
entry:
  %shl = shl i32 %a, 1
  %sub = sub i32 %shl, %b
  ret i32 %sub
}

define i32 @subx4(i32 %a, i32 %b) {
entry:
  %shl = shl i32 %a, 2
  %sub = sub i32 %shl, %b
  ret i32 %sub
}

define i32 @subx8(i32 %a, i32 %b) {
entry:
  %shl = shl i32 %a, 3
  %sub = sub i32 %shl, %b
  ret i32 %sub
}
