; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=xtensa | FileCheck %s

declare void @llvm.memset.p0.i32(ptr %dest, i8 %val, i32 %len, i1 %isvolatile)
declare void @llvm.memcpy.p0.p0.i32(ptr %dest, ptr %src, i32 %len, i1 %isvolatile)
declare void @llvm.memmove.p0.p0.i32(ptr %dest, ptr %src, i32 %len, i1 %isvolatile)

define void @do_memset(ptr %p, i8 %val, i32 %len) {
; CHECK-LABEL: do_memset:
; CHECK:       # %bb.0:
; CHECK-NEXT:    addi a1, a1, -16
; CHECK-NEXT:    s32i.n a0, a1, 12 # 4-byte Spill
; CHECK-NEXT:    call0 memset
; CHECK-NEXT:    l32i.n a0, a1, 12 # 4-byte Reload
; CHECK-NEXT:    addi a1, a1, 16
; CHECK-NEXT:    ret.n
  call void @llvm.memset.p0.i32(ptr %p, i8 %val, i32 %len, i1 false)
  ret void
}

define void @do_memcpy(ptr %dest, ptr %src, i32 %len) {
; CHECK-LABEL: do_memcpy:
; CHECK:       # %bb.0:
; CHECK-NEXT:    addi a1, a1, -16
; CHECK-NEXT:    s32i.n a0, a1, 12 # 4-byte Spill
; CHECK-NEXT:    call0 memcpy
; CHECK-NEXT:    l32i.n a0, a1, 12 # 4-byte Reload
; CHECK-NEXT:    addi a1, a1, 16
; CHECK-NEXT:    ret.n
  call void @llvm.memcpy.p0.p0.i32(ptr %dest, ptr %src, i32 %len, i1 false)
  ret void
}

define void @do_memmove(ptr %dest, ptr %src, i32 %len) {
; CHECK-LABEL: do_memmove:
; CHECK:       # %bb.0:
; CHECK-NEXT:    addi a1, a1, -16
; CHECK-NEXT:    s32i.n a0, a1, 12 # 4-byte Spill
; CHECK-NEXT:    call0 memmove
; CHECK-NEXT:    l32i.n a0, a1, 12 # 4-byte Reload
; CHECK-NEXT:    addi a1, a1, 16
; CHECK-NEXT:    ret.n
  call void @llvm.memmove.p0.p0.i32(ptr %dest, ptr %src, i32 %len, i1 false)
  ret void
}
