; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=xtensa | FileCheck %s

define i32 @addi_zero(i32 %a) {
; CHECK-LABEL: addi_zero:
; CHECK:       # %bb.0:
; CHECK-NEXT:    ret.n
  %add = add i32 %a, 0
  ret i32 %add
}

define i32 @addi_pos(i32 %a) {
; CHECK-LABEL: addi_pos:
; CHECK:       # %bb.0:
; CHECK-NEXT:    addi.n a2, a2, 5
; CHECK-NEXT:    ret.n
  %add = add i32 %a, 5
  ret i32 %add
}

define i32 @addi_neg(i32 %a) {
; CHECK-LABEL: addi_neg:
; CHECK:       # %bb.0:
; CHECK-NEXT:    addi a2, a2, -5
; CHECK-NEXT:    ret.n
  %add = add i32 %a, -5
  ret i32 %add
}

define i32 @addi_pos_max(i32 %a) {
; CHECK-LABEL: addi_pos_max:
; CHECK:       # %bb.0:
; CHECK-NEXT:    addi a2, a2, 127
; CHECK-NEXT:    ret.n
  %add = add i32 %a, 127
  ret i32 %add
}

define i32 @addi_neg_min(i32 %a) {
; CHECK-LABEL: addi_neg_min:
; CHECK:       # %bb.0:
; CHECK-NEXT:    addi a2, a2, -128
; CHECK-NEXT:    ret.n
  %add = add i32 %a, -128
  ret i32 %add
}

define i32 @not_addi_pos_min(i32 %a) {
; CHECK-LABEL: not_addi_pos_min:
; CHECK:       # %bb.0:
; CHECK-NEXT:    movi a3, 128
; CHECK-NEXT:    add.n a2, a2, a3
; CHECK-NEXT:    ret.n
  %add = add i32 %a, 128
  ret i32 %add
}

define i32 @not_addi_neg_max(i32 %a) {
; CHECK-LABEL: not_addi_neg_max:
; CHECK:       # %bb.0:
; CHECK-NEXT:    movi a3, -129
; CHECK-NEXT:    add.n a2, a2, a3
; CHECK-NEXT:    ret.n
  %add = add i32 %a, -129
  ret i32 %add
}

define i32 @subi_zero(i32 %a) {
; CHECK-LABEL: subi_zero:
; CHECK:       # %bb.0:
; CHECK-NEXT:    ret.n
  %sub = sub i32 %a, 0
  ret i32 %sub
}

define i32 @subi_pos(i32 %a) {
; CHECK-LABEL: subi_pos:
; CHECK:       # %bb.0:
; CHECK-NEXT:    addi a2, a2, -5
; CHECK-NEXT:    ret.n
  %sub = sub i32 %a, 5
  ret i32 %sub
}

define i32 @subi_neg(i32 %a) {
; CHECK-LABEL: subi_neg:
; CHECK:       # %bb.0:
; CHECK-NEXT:    addi.n a2, a2, 5
; CHECK-NEXT:    ret.n
  %sub = sub i32 %a, -5
  ret i32 %sub
}

define i32 @subi_pos_max(i32 %a) {
; CHECK-LABEL: subi_pos_max:
; CHECK:       # %bb.0:
; CHECK-NEXT:    addi a2, a2, -128
; CHECK-NEXT:    ret.n
  %sub = sub i32 %a, 128
  ret i32 %sub
}

define i32 @subi_neg_min(i32 %a) {
; CHECK-LABEL: subi_neg_min:
; CHECK:       # %bb.0:
; CHECK-NEXT:    addi a2, a2, 127
; CHECK-NEXT:    ret.n
  %sub = sub i32 %a, -127
  ret i32 %sub
}

define i32 @not_subi_pos_min(i32 %a) {
; CHECK-LABEL: not_subi_pos_min:
; CHECK:       # %bb.0:
; CHECK-NEXT:    movi a3, 129
; CHECK-NEXT:    sub a2, a2, a3
; CHECK-NEXT:    ret.n
  %sub = sub i32 %a, 129
  ret i32 %sub
}

define i32 @not_subi_neg_max(i32 %a) {
; CHECK-LABEL: not_subi_neg_max:
; CHECK:       # %bb.0:
; CHECK-NEXT:    movi a3, -128
; CHECK-NEXT:    sub a2, a2, a3
; CHECK-NEXT:    ret.n
  %sub = sub i32 %a, -128
  ret i32 %sub
}
