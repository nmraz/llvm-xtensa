; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc < %s -mtriple=xtensa | FileCheck %s
; RUN: llc < %s -mtriple=xtensa -mattr=+minmax | FileCheck %s --check-prefix=MINMAX

declare i8 @llvm.smin.i8(i8 %a, i8 %b)
declare i8 @llvm.umin.i8(i8 %a, i8 %b)
declare i8 @llvm.smax.i8(i8 %a, i8 %b)
declare i8 @llvm.umax.i8(i8 %a, i8 %b)
declare i16 @llvm.smin.i16(i16 %a, i16 %b)
declare i16 @llvm.umin.i16(i16 %a, i16 %b)
declare i16 @llvm.smax.i16(i16 %a, i16 %b)
declare i16 @llvm.umax.i16(i16 %a, i16 %b)
declare i32 @llvm.smin.i32(i32 %a, i32 %b)
declare i32 @llvm.umin.i32(i32 %a, i32 %b)
declare i32 @llvm.smax.i32(i32 %a, i32 %b)
declare i32 @llvm.umax.i32(i32 %a, i32 %b)

define i8 @smin_i8(i8 %a, i8 %b) {
; CHECK-LABEL: smin_i8:
; CHECK:       # %bb.0:
; CHECK-NEXT:    sext a4, a2, 7
; CHECK-NEXT:    sext a5, a3, 7
; CHECK-NEXT:    sub a4, a4, a5
; CHECK-NEXT:    movgez a2, a3, a4
; CHECK-NEXT:    ret.n
;
; MINMAX-LABEL: smin_i8:
; MINMAX:       # %bb.0:
; MINMAX-NEXT:    sext a2, a2, 7
; MINMAX-NEXT:    sext a3, a3, 7
; MINMAX-NEXT:    min a2, a2, a3
; MINMAX-NEXT:    ret.n
  %smin = call i8 @llvm.smin.i8(i8 %a, i8 %b)
  ret i8 %smin
}

define i8 @umin_i8(i8 %a, i8 %b) {
; CHECK-LABEL: umin_i8:
; CHECK:       # %bb.0:
; CHECK-NEXT:    extui a4, a2, 0, 8
; CHECK-NEXT:    extui a5, a3, 0, 8
; CHECK-NEXT:    bltu a4, a5, .LBB1_2
; CHECK-NEXT:  # %bb.1:
; CHECK-NEXT:    mov.n a2, a3
; CHECK-NEXT:  .LBB1_2:
; CHECK-NEXT:    ret.n
;
; MINMAX-LABEL: umin_i8:
; MINMAX:       # %bb.0:
; MINMAX-NEXT:    extui a2, a2, 0, 8
; MINMAX-NEXT:    extui a3, a3, 0, 8
; MINMAX-NEXT:    minu a2, a2, a3
; MINMAX-NEXT:    ret.n
  %umin = call i8 @llvm.umin.i8(i8 %a, i8 %b)
  ret i8 %umin
}

define i8 @smax_i8(i8 %a, i8 %b) {
; CHECK-LABEL: smax_i8:
; CHECK:       # %bb.0:
; CHECK-NEXT:    sext a4, a2, 7
; CHECK-NEXT:    sext a5, a3, 7
; CHECK-NEXT:    sub a4, a5, a4
; CHECK-NEXT:    movgez a2, a3, a4
; CHECK-NEXT:    ret.n
;
; MINMAX-LABEL: smax_i8:
; MINMAX:       # %bb.0:
; MINMAX-NEXT:    sext a2, a2, 7
; MINMAX-NEXT:    sext a3, a3, 7
; MINMAX-NEXT:    max a2, a2, a3
; MINMAX-NEXT:    ret.n
  %smax = call i8 @llvm.smax.i8(i8 %a, i8 %b)
  ret i8 %smax
}

define i8 @umax_i8(i8 %a, i8 %b) {
; CHECK-LABEL: umax_i8:
; CHECK:       # %bb.0:
; CHECK-NEXT:    extui a4, a2, 0, 8
; CHECK-NEXT:    extui a5, a3, 0, 8
; CHECK-NEXT:    bltu a5, a4, .LBB3_2
; CHECK-NEXT:  # %bb.1:
; CHECK-NEXT:    mov.n a2, a3
; CHECK-NEXT:  .LBB3_2:
; CHECK-NEXT:    ret.n
;
; MINMAX-LABEL: umax_i8:
; MINMAX:       # %bb.0:
; MINMAX-NEXT:    extui a2, a2, 0, 8
; MINMAX-NEXT:    extui a3, a3, 0, 8
; MINMAX-NEXT:    maxu a2, a2, a3
; MINMAX-NEXT:    ret.n
  %umax = call i8 @llvm.umax.i8(i8 %a, i8 %b)
  ret i8 %umax
}

define i16 @smin_i16(i16 %a, i16 %b) {
; CHECK-LABEL: smin_i16:
; CHECK:       # %bb.0:
; CHECK-NEXT:    sext a4, a2, 15
; CHECK-NEXT:    sext a5, a3, 15
; CHECK-NEXT:    sub a4, a4, a5
; CHECK-NEXT:    movgez a2, a3, a4
; CHECK-NEXT:    ret.n
;
; MINMAX-LABEL: smin_i16:
; MINMAX:       # %bb.0:
; MINMAX-NEXT:    sext a2, a2, 15
; MINMAX-NEXT:    sext a3, a3, 15
; MINMAX-NEXT:    min a2, a2, a3
; MINMAX-NEXT:    ret.n
  %smin = call i16 @llvm.smin.i16(i16 %a, i16 %b)
  ret i16 %smin
}

define i16 @umin_i16(i16 %a, i16 %b) {
; CHECK-LABEL: umin_i16:
; CHECK:       # %bb.0:
; CHECK-NEXT:    extui a4, a2, 0, 16
; CHECK-NEXT:    extui a5, a3, 0, 16
; CHECK-NEXT:    bltu a4, a5, .LBB5_2
; CHECK-NEXT:  # %bb.1:
; CHECK-NEXT:    mov.n a2, a3
; CHECK-NEXT:  .LBB5_2:
; CHECK-NEXT:    ret.n
;
; MINMAX-LABEL: umin_i16:
; MINMAX:       # %bb.0:
; MINMAX-NEXT:    extui a2, a2, 0, 16
; MINMAX-NEXT:    extui a3, a3, 0, 16
; MINMAX-NEXT:    minu a2, a2, a3
; MINMAX-NEXT:    ret.n
  %umin = call i16 @llvm.umin.i16(i16 %a, i16 %b)
  ret i16 %umin
}

define i16 @smax_i16(i16 %a, i16 %b) {
; CHECK-LABEL: smax_i16:
; CHECK:       # %bb.0:
; CHECK-NEXT:    sext a4, a2, 15
; CHECK-NEXT:    sext a5, a3, 15
; CHECK-NEXT:    sub a4, a5, a4
; CHECK-NEXT:    movgez a2, a3, a4
; CHECK-NEXT:    ret.n
;
; MINMAX-LABEL: smax_i16:
; MINMAX:       # %bb.0:
; MINMAX-NEXT:    sext a2, a2, 15
; MINMAX-NEXT:    sext a3, a3, 15
; MINMAX-NEXT:    max a2, a2, a3
; MINMAX-NEXT:    ret.n
  %smax = call i16 @llvm.smax.i16(i16 %a, i16 %b)
  ret i16 %smax
}

define i16 @umax_i16(i16 %a, i16 %b) {
; CHECK-LABEL: umax_i16:
; CHECK:       # %bb.0:
; CHECK-NEXT:    extui a4, a2, 0, 16
; CHECK-NEXT:    extui a5, a3, 0, 16
; CHECK-NEXT:    bltu a5, a4, .LBB7_2
; CHECK-NEXT:  # %bb.1:
; CHECK-NEXT:    mov.n a2, a3
; CHECK-NEXT:  .LBB7_2:
; CHECK-NEXT:    ret.n
;
; MINMAX-LABEL: umax_i16:
; MINMAX:       # %bb.0:
; MINMAX-NEXT:    extui a2, a2, 0, 16
; MINMAX-NEXT:    extui a3, a3, 0, 16
; MINMAX-NEXT:    maxu a2, a2, a3
; MINMAX-NEXT:    ret.n
  %umax = call i16 @llvm.umax.i16(i16 %a, i16 %b)
  ret i16 %umax
}

define i32 @smin_i32(i32 %a, i32 %b) {
; CHECK-LABEL: smin_i32:
; CHECK:       # %bb.0:
; CHECK-NEXT:    sub a4, a2, a3
; CHECK-NEXT:    movgez a2, a3, a4
; CHECK-NEXT:    ret.n
;
; MINMAX-LABEL: smin_i32:
; MINMAX:       # %bb.0:
; MINMAX-NEXT:    min a2, a2, a3
; MINMAX-NEXT:    ret.n
  %smin = call i32 @llvm.smin.i32(i32 %a, i32 %b)
  ret i32 %smin
}

define i32 @umin_i32(i32 %a, i32 %b) {
; CHECK-LABEL: umin_i32:
; CHECK:       # %bb.0:
; CHECK-NEXT:    bltu a2, a3, .LBB9_2
; CHECK-NEXT:  # %bb.1:
; CHECK-NEXT:    mov.n a2, a3
; CHECK-NEXT:  .LBB9_2:
; CHECK-NEXT:    ret.n
;
; MINMAX-LABEL: umin_i32:
; MINMAX:       # %bb.0:
; MINMAX-NEXT:    minu a2, a2, a3
; MINMAX-NEXT:    ret.n
  %umin = call i32 @llvm.umin.i32(i32 %a, i32 %b)
  ret i32 %umin
}

define i32 @smax_i32(i32 %a, i32 %b) {
; CHECK-LABEL: smax_i32:
; CHECK:       # %bb.0:
; CHECK-NEXT:    sub a4, a3, a2
; CHECK-NEXT:    movgez a2, a3, a4
; CHECK-NEXT:    ret.n
;
; MINMAX-LABEL: smax_i32:
; MINMAX:       # %bb.0:
; MINMAX-NEXT:    max a2, a2, a3
; MINMAX-NEXT:    ret.n
  %smax = call i32 @llvm.smax.i32(i32 %a, i32 %b)
  ret i32 %smax
}

define i32 @umax_i32(i32 %a, i32 %b) {
; CHECK-LABEL: umax_i32:
; CHECK:       # %bb.0:
; CHECK-NEXT:    bltu a3, a2, .LBB11_2
; CHECK-NEXT:  # %bb.1:
; CHECK-NEXT:    mov.n a2, a3
; CHECK-NEXT:  .LBB11_2:
; CHECK-NEXT:    ret.n
;
; MINMAX-LABEL: umax_i32:
; MINMAX:       # %bb.0:
; MINMAX-NEXT:    maxu a2, a2, a3
; MINMAX-NEXT:    ret.n
  %umax = call i32 @llvm.umax.i32(i32 %a, i32 %b)
  ret i32 %umax
}
