# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -O0 -mtriple=xtensa -run-pass=instruction-select -verify-machineinstrs %s -o - | FileCheck %s
--- |
  ; ModuleID = 'llvm/test/CodeGen/Xtensa/GlobalISel/regbankselect/ext.mir'
  source_filename = "ext.ll"
  target datalayout = "e-m:e-p:32:32-i64:64-n32-S128"
  target triple = "xtensa"

  define i32 @zext_i1_i32(i1 %val) {
  entry:
    %ext = zext i1 %val to i32
    ret i32 %ext
  }

  define i32 @sext_i1_i32(i1 %val) {
  entry:
    %ext = sext i1 %val to i32
    ret i32 %ext
  }

  define i8 @zext_i1_i8(i1 %val) {
  entry:
    %ext = zext i1 %val to i8
    ret i8 %ext
  }

  define i8 @sext_i1_i8(i1 %val) {
  entry:
    %ext = sext i1 %val to i8
    ret i8 %ext
  }

  define i16 @zext_i1_i16(i1 %val) {
  entry:
    %ext = zext i1 %val to i16
    ret i16 %ext
  }

  define i16 @sext_i1_i16(i1 %val) {
  entry:
    %ext = sext i1 %val to i16
    ret i16 %ext
  }

  define i32 @zext_i8_i32(i8 %val) {
  entry:
    %ext = zext i8 %val to i32
    ret i32 %ext
  }

  define i32 @sext_i8_i32(i8 %val) {
  entry:
    %ext = sext i8 %val to i32
    ret i32 %ext
  }

  define i32 @zext_i16_i32(i16 %val) {
  entry:
    %ext = zext i16 %val to i32
    ret i32 %ext
  }

  define i32 @sext_i16_i32(i16 %val) {
  entry:
    %ext = sext i16 %val to i32
    ret i32 %ext
  }

  define i64 @zext_i1_i64(i1 %val) {
  entry:
    %ext = zext i1 %val to i64
    ret i64 %ext
  }

  define i64 @sext_i1_i64(i1 %val) {
  entry:
    %ext = sext i1 %val to i64
    ret i64 %ext
  }

  define i64 @zext_i8_i64(i8 %val) {
  entry:
    %ext = zext i8 %val to i64
    ret i64 %ext
  }

  define i64 @sext_i8_i64(i8 %val) {
  entry:
    %ext = sext i8 %val to i64
    ret i64 %ext
  }

  define i64 @zext_i16_i64(i16 %val) {
  entry:
    %ext = zext i16 %val to i64
    ret i64 %ext
  }

  define i64 @sext_i16_i64(i16 %val) {
  entry:
    %ext = sext i16 %val to i64
    ret i64 %ext
  }

...
---
name:            zext_i1_i32
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: gprb, preferred-register: '' }
  - { id: 2, class: gprb, preferred-register: '' }
  - { id: 3, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.0.entry:
    liveins: $a2

    ; CHECK-LABEL: name: zext_i1_i32
    ; CHECK: liveins: $a2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[EXTUI:%[0-9]+]]:gpr = EXTUI [[COPY]], 0, 1
    ; CHECK-NEXT: $a2 = COPY [[EXTUI]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2
    %1:gprb(s32) = COPY $a2
    %3:gprb(s32) = G_CONSTANT i32 1
    %2:gprb(s32) = G_AND %1, %3
    $a2 = COPY %2(s32)
    RETN implicit $a0, implicit $a2

...
---
name:            sext_i1_i32
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: gprb, preferred-register: '' }
  - { id: 2, class: gprb, preferred-register: '' }
  - { id: 3, class: gprb, preferred-register: '' }
  - { id: 4, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.0.entry:
    liveins: $a2

    ; CHECK-LABEL: name: sext_i1_i32
    ; CHECK: liveins: $a2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[SLLI:%[0-9]+]]:gpr = SLLI [[COPY]], 31
    ; CHECK-NEXT: [[SRAI:%[0-9]+]]:gpr = SRAI [[SLLI]], 31
    ; CHECK-NEXT: $a2 = COPY [[SRAI]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2
    %1:gprb(s32) = COPY $a2
    %4:gprb(s32) = G_CONSTANT i32 31
    %3:gprb(s32) = G_SHL %1, %4(s32)
    %2:gprb(s32) = G_ASHR %3, %4(s32)
    $a2 = COPY %2(s32)
    RETN implicit $a0, implicit $a2

...
---
name:            zext_i1_i8
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: gprb, preferred-register: '' }
  - { id: 2, class: _, preferred-register: '' }
  - { id: 3, class: gprb, preferred-register: '' }
  - { id: 4, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.0.entry:
    liveins: $a2

    ; CHECK-LABEL: name: zext_i1_i8
    ; CHECK: liveins: $a2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[EXTUI:%[0-9]+]]:gpr = EXTUI [[COPY]], 0, 1
    ; CHECK-NEXT: $a2 = COPY [[EXTUI]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2
    %1:gprb(s32) = COPY $a2
    %4:gprb(s32) = G_CONSTANT i32 1
    %3:gprb(s32) = G_AND %1, %4
    $a2 = COPY %3(s32)
    RETN implicit $a0, implicit $a2

...
---
name:            sext_i1_i8
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: gprb, preferred-register: '' }
  - { id: 2, class: _, preferred-register: '' }
  - { id: 3, class: gprb, preferred-register: '' }
  - { id: 4, class: gprb, preferred-register: '' }
  - { id: 5, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.0.entry:
    liveins: $a2

    ; CHECK-LABEL: name: sext_i1_i8
    ; CHECK: liveins: $a2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[SLLI:%[0-9]+]]:gpr = SLLI [[COPY]], 31
    ; CHECK-NEXT: [[SRAI:%[0-9]+]]:gpr = SRAI [[SLLI]], 31
    ; CHECK-NEXT: $a2 = COPY [[SRAI]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2
    %1:gprb(s32) = COPY $a2
    %5:gprb(s32) = G_CONSTANT i32 31
    %4:gprb(s32) = G_SHL %1, %5(s32)
    %3:gprb(s32) = G_ASHR %4, %5(s32)
    $a2 = COPY %3(s32)
    RETN implicit $a0, implicit $a2

...
---
name:            zext_i1_i16
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: gprb, preferred-register: '' }
  - { id: 2, class: _, preferred-register: '' }
  - { id: 3, class: gprb, preferred-register: '' }
  - { id: 4, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.0.entry:
    liveins: $a2

    ; CHECK-LABEL: name: zext_i1_i16
    ; CHECK: liveins: $a2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[EXTUI:%[0-9]+]]:gpr = EXTUI [[COPY]], 0, 1
    ; CHECK-NEXT: $a2 = COPY [[EXTUI]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2
    %1:gprb(s32) = COPY $a2
    %4:gprb(s32) = G_CONSTANT i32 1
    %3:gprb(s32) = G_AND %1, %4
    $a2 = COPY %3(s32)
    RETN implicit $a0, implicit $a2

...
---
name:            sext_i1_i16
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: gprb, preferred-register: '' }
  - { id: 2, class: _, preferred-register: '' }
  - { id: 3, class: gprb, preferred-register: '' }
  - { id: 4, class: gprb, preferred-register: '' }
  - { id: 5, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.0.entry:
    liveins: $a2

    ; CHECK-LABEL: name: sext_i1_i16
    ; CHECK: liveins: $a2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[SLLI:%[0-9]+]]:gpr = SLLI [[COPY]], 31
    ; CHECK-NEXT: [[SRAI:%[0-9]+]]:gpr = SRAI [[SLLI]], 31
    ; CHECK-NEXT: $a2 = COPY [[SRAI]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2
    %1:gprb(s32) = COPY $a2
    %5:gprb(s32) = G_CONSTANT i32 31
    %4:gprb(s32) = G_SHL %1, %5(s32)
    %3:gprb(s32) = G_ASHR %4, %5(s32)
    $a2 = COPY %3(s32)
    RETN implicit $a0, implicit $a2

...
---
name:            zext_i8_i32
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: gprb, preferred-register: '' }
  - { id: 2, class: gprb, preferred-register: '' }
  - { id: 3, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.0.entry:
    liveins: $a2

    ; CHECK-LABEL: name: zext_i8_i32
    ; CHECK: liveins: $a2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[EXTUI:%[0-9]+]]:gpr = EXTUI [[COPY]], 0, 8
    ; CHECK-NEXT: $a2 = COPY [[EXTUI]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2
    %1:gprb(s32) = COPY $a2
    %3:gprb(s32) = G_CONSTANT i32 255
    %2:gprb(s32) = G_AND %1, %3
    $a2 = COPY %2(s32)
    RETN implicit $a0, implicit $a2

...
---
name:            sext_i8_i32
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: gprb, preferred-register: '' }
  - { id: 2, class: gprb, preferred-register: '' }
  - { id: 3, class: gprb, preferred-register: '' }
  - { id: 4, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.0.entry:
    liveins: $a2

    ; CHECK-LABEL: name: sext_i8_i32
    ; CHECK: liveins: $a2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[SLLI:%[0-9]+]]:gpr = SLLI [[COPY]], 24
    ; CHECK-NEXT: [[SRAI:%[0-9]+]]:gpr = SRAI [[SLLI]], 24
    ; CHECK-NEXT: $a2 = COPY [[SRAI]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2
    %1:gprb(s32) = COPY $a2
    %4:gprb(s32) = G_CONSTANT i32 24
    %3:gprb(s32) = G_SHL %1, %4(s32)
    %2:gprb(s32) = G_ASHR %3, %4(s32)
    $a2 = COPY %2(s32)
    RETN implicit $a0, implicit $a2

...
---
name:            zext_i16_i32
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: gprb, preferred-register: '' }
  - { id: 2, class: gprb, preferred-register: '' }
  - { id: 3, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.0.entry:
    liveins: $a2

    ; CHECK-LABEL: name: zext_i16_i32
    ; CHECK: liveins: $a2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[EXTUI:%[0-9]+]]:gpr = EXTUI [[COPY]], 0, 16
    ; CHECK-NEXT: $a2 = COPY [[EXTUI]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2
    %1:gprb(s32) = COPY $a2
    %3:gprb(s32) = G_CONSTANT i32 65535
    %2:gprb(s32) = G_AND %1, %3
    $a2 = COPY %2(s32)
    RETN implicit $a0, implicit $a2

...
---
name:            sext_i16_i32
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: gprb, preferred-register: '' }
  - { id: 2, class: gprb, preferred-register: '' }
  - { id: 3, class: gprb, preferred-register: '' }
  - { id: 4, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.0.entry:
    liveins: $a2

    ; CHECK-LABEL: name: sext_i16_i32
    ; CHECK: liveins: $a2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[SLLI:%[0-9]+]]:gpr = SLLI [[COPY]], 16
    ; CHECK-NEXT: [[SRAI:%[0-9]+]]:gpr = SRAI [[SLLI]], 16
    ; CHECK-NEXT: $a2 = COPY [[SRAI]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2
    %1:gprb(s32) = COPY $a2
    %4:gprb(s32) = G_CONSTANT i32 16
    %3:gprb(s32) = G_SHL %1, %4(s32)
    %2:gprb(s32) = G_ASHR %3, %4(s32)
    $a2 = COPY %2(s32)
    RETN implicit $a0, implicit $a2

...
---
name:            zext_i1_i64
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: gprb, preferred-register: '' }
  - { id: 2, class: _, preferred-register: '' }
  - { id: 3, class: _, preferred-register: '' }
  - { id: 4, class: _, preferred-register: '' }
  - { id: 5, class: _, preferred-register: '' }
  - { id: 6, class: _, preferred-register: '' }
  - { id: 7, class: _, preferred-register: '' }
  - { id: 8, class: gprb, preferred-register: '' }
  - { id: 9, class: _, preferred-register: '' }
  - { id: 10, class: _, preferred-register: '' }
  - { id: 11, class: _, preferred-register: '' }
  - { id: 12, class: _, preferred-register: '' }
  - { id: 13, class: gprb, preferred-register: '' }
  - { id: 14, class: gprb, preferred-register: '' }
  - { id: 15, class: gprb, preferred-register: '' }
  - { id: 16, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.0.entry:
    liveins: $a2

    ; CHECK-LABEL: name: zext_i1_i64
    ; CHECK: liveins: $a2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[MOVIN:%[0-9]+]]:gpr = MOVIN 0
    ; CHECK-NEXT: [[EXTUI:%[0-9]+]]:gpr = EXTUI [[COPY]], 0, 1
    ; CHECK-NEXT: $a2 = COPY [[EXTUI]]
    ; CHECK-NEXT: $a3 = COPY [[MOVIN]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2, implicit $a3
    %1:gprb(s32) = COPY $a2
    %15:gprb(s32) = G_CONSTANT i32 1
    %16:gprb(s32) = G_CONSTANT i32 0
    %13:gprb(s32) = G_AND %1, %15
    $a2 = COPY %13(s32)
    $a3 = COPY %16(s32)
    RETN implicit $a0, implicit $a2, implicit $a3

...
---
name:            sext_i1_i64
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: gprb, preferred-register: '' }
  - { id: 2, class: _, preferred-register: '' }
  - { id: 3, class: _, preferred-register: '' }
  - { id: 4, class: _, preferred-register: '' }
  - { id: 5, class: _, preferred-register: '' }
  - { id: 6, class: _, preferred-register: '' }
  - { id: 7, class: _, preferred-register: '' }
  - { id: 8, class: _, preferred-register: '' }
  - { id: 9, class: _, preferred-register: '' }
  - { id: 10, class: _, preferred-register: '' }
  - { id: 11, class: _, preferred-register: '' }
  - { id: 12, class: _, preferred-register: '' }
  - { id: 13, class: gprb, preferred-register: '' }
  - { id: 14, class: gprb, preferred-register: '' }
  - { id: 15, class: gprb, preferred-register: '' }
  - { id: 16, class: gprb, preferred-register: '' }
  - { id: 17, class: _, preferred-register: '' }
  - { id: 18, class: _, preferred-register: '' }
  - { id: 19, class: _, preferred-register: '' }
  - { id: 20, class: _, preferred-register: '' }
  - { id: 21, class: gprb, preferred-register: '' }
  - { id: 22, class: gprb, preferred-register: '' }
  - { id: 23, class: _, preferred-register: '' }
  - { id: 24, class: _, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.0.entry:
    liveins: $a2

    ; CHECK-LABEL: name: sext_i1_i64
    ; CHECK: liveins: $a2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[SLLI:%[0-9]+]]:gpr = SLLI [[COPY]], 31
    ; CHECK-NEXT: [[SRAI:%[0-9]+]]:gpr = SRAI [[SLLI]], 31
    ; CHECK-NEXT: [[SRAI1:%[0-9]+]]:gpr = SRAI [[SLLI]], 31
    ; CHECK-NEXT: $a2 = COPY [[SRAI]]
    ; CHECK-NEXT: $a3 = COPY [[SRAI1]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2, implicit $a3
    %1:gprb(s32) = COPY $a2
    %21:gprb(s32) = G_CONSTANT i32 31
    %22:gprb(s32) = G_SHL %1, %21(s32)
    %13:gprb(s32) = G_CONSTANT i32 31
    %14:gprb(s32) = G_ASHR %22, %13(s32)
    %15:gprb(s32) = G_CONSTANT i32 31
    %16:gprb(s32) = G_ASHR %22, %15(s32)
    $a2 = COPY %14(s32)
    $a3 = COPY %16(s32)
    RETN implicit $a0, implicit $a2, implicit $a3

...
---
name:            zext_i8_i64
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: gprb, preferred-register: '' }
  - { id: 2, class: _, preferred-register: '' }
  - { id: 3, class: _, preferred-register: '' }
  - { id: 4, class: _, preferred-register: '' }
  - { id: 5, class: _, preferred-register: '' }
  - { id: 6, class: _, preferred-register: '' }
  - { id: 7, class: _, preferred-register: '' }
  - { id: 8, class: gprb, preferred-register: '' }
  - { id: 9, class: _, preferred-register: '' }
  - { id: 10, class: _, preferred-register: '' }
  - { id: 11, class: _, preferred-register: '' }
  - { id: 12, class: _, preferred-register: '' }
  - { id: 13, class: gprb, preferred-register: '' }
  - { id: 14, class: gprb, preferred-register: '' }
  - { id: 15, class: gprb, preferred-register: '' }
  - { id: 16, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.0.entry:
    liveins: $a2

    ; CHECK-LABEL: name: zext_i8_i64
    ; CHECK: liveins: $a2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[MOVIN:%[0-9]+]]:gpr = MOVIN 0
    ; CHECK-NEXT: [[EXTUI:%[0-9]+]]:gpr = EXTUI [[COPY]], 0, 8
    ; CHECK-NEXT: $a2 = COPY [[EXTUI]]
    ; CHECK-NEXT: $a3 = COPY [[MOVIN]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2, implicit $a3
    %1:gprb(s32) = COPY $a2
    %15:gprb(s32) = G_CONSTANT i32 255
    %16:gprb(s32) = G_CONSTANT i32 0
    %13:gprb(s32) = G_AND %1, %15
    $a2 = COPY %13(s32)
    $a3 = COPY %16(s32)
    RETN implicit $a0, implicit $a2, implicit $a3

...
---
name:            sext_i8_i64
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: gprb, preferred-register: '' }
  - { id: 2, class: _, preferred-register: '' }
  - { id: 3, class: _, preferred-register: '' }
  - { id: 4, class: _, preferred-register: '' }
  - { id: 5, class: _, preferred-register: '' }
  - { id: 6, class: _, preferred-register: '' }
  - { id: 7, class: _, preferred-register: '' }
  - { id: 8, class: _, preferred-register: '' }
  - { id: 9, class: _, preferred-register: '' }
  - { id: 10, class: _, preferred-register: '' }
  - { id: 11, class: _, preferred-register: '' }
  - { id: 12, class: _, preferred-register: '' }
  - { id: 13, class: gprb, preferred-register: '' }
  - { id: 14, class: gprb, preferred-register: '' }
  - { id: 15, class: gprb, preferred-register: '' }
  - { id: 16, class: gprb, preferred-register: '' }
  - { id: 17, class: _, preferred-register: '' }
  - { id: 18, class: _, preferred-register: '' }
  - { id: 19, class: _, preferred-register: '' }
  - { id: 20, class: _, preferred-register: '' }
  - { id: 21, class: gprb, preferred-register: '' }
  - { id: 22, class: gprb, preferred-register: '' }
  - { id: 23, class: _, preferred-register: '' }
  - { id: 24, class: _, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.0.entry:
    liveins: $a2

    ; CHECK-LABEL: name: sext_i8_i64
    ; CHECK: liveins: $a2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[SLLI:%[0-9]+]]:gpr = SLLI [[COPY]], 24
    ; CHECK-NEXT: [[SRAI:%[0-9]+]]:gpr = SRAI [[SLLI]], 24
    ; CHECK-NEXT: [[SRAI1:%[0-9]+]]:gpr = SRAI [[SLLI]], 31
    ; CHECK-NEXT: $a2 = COPY [[SRAI]]
    ; CHECK-NEXT: $a3 = COPY [[SRAI1]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2, implicit $a3
    %1:gprb(s32) = COPY $a2
    %21:gprb(s32) = G_CONSTANT i32 24
    %22:gprb(s32) = G_SHL %1, %21(s32)
    %13:gprb(s32) = G_CONSTANT i32 24
    %14:gprb(s32) = G_ASHR %22, %13(s32)
    %15:gprb(s32) = G_CONSTANT i32 31
    %16:gprb(s32) = G_ASHR %22, %15(s32)
    $a2 = COPY %14(s32)
    $a3 = COPY %16(s32)
    RETN implicit $a0, implicit $a2, implicit $a3

...
---
name:            zext_i16_i64
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: gprb, preferred-register: '' }
  - { id: 2, class: _, preferred-register: '' }
  - { id: 3, class: _, preferred-register: '' }
  - { id: 4, class: _, preferred-register: '' }
  - { id: 5, class: _, preferred-register: '' }
  - { id: 6, class: _, preferred-register: '' }
  - { id: 7, class: _, preferred-register: '' }
  - { id: 8, class: gprb, preferred-register: '' }
  - { id: 9, class: _, preferred-register: '' }
  - { id: 10, class: _, preferred-register: '' }
  - { id: 11, class: _, preferred-register: '' }
  - { id: 12, class: _, preferred-register: '' }
  - { id: 13, class: gprb, preferred-register: '' }
  - { id: 14, class: gprb, preferred-register: '' }
  - { id: 15, class: gprb, preferred-register: '' }
  - { id: 16, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.0.entry:
    liveins: $a2

    ; CHECK-LABEL: name: zext_i16_i64
    ; CHECK: liveins: $a2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[MOVIN:%[0-9]+]]:gpr = MOVIN 0
    ; CHECK-NEXT: [[EXTUI:%[0-9]+]]:gpr = EXTUI [[COPY]], 0, 16
    ; CHECK-NEXT: $a2 = COPY [[EXTUI]]
    ; CHECK-NEXT: $a3 = COPY [[MOVIN]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2, implicit $a3
    %1:gprb(s32) = COPY $a2
    %15:gprb(s32) = G_CONSTANT i32 65535
    %16:gprb(s32) = G_CONSTANT i32 0
    %13:gprb(s32) = G_AND %1, %15
    $a2 = COPY %13(s32)
    $a3 = COPY %16(s32)
    RETN implicit $a0, implicit $a2, implicit $a3

...
---
name:            sext_i16_i64
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: gprb, preferred-register: '' }
  - { id: 2, class: _, preferred-register: '' }
  - { id: 3, class: _, preferred-register: '' }
  - { id: 4, class: _, preferred-register: '' }
  - { id: 5, class: _, preferred-register: '' }
  - { id: 6, class: _, preferred-register: '' }
  - { id: 7, class: _, preferred-register: '' }
  - { id: 8, class: _, preferred-register: '' }
  - { id: 9, class: _, preferred-register: '' }
  - { id: 10, class: _, preferred-register: '' }
  - { id: 11, class: _, preferred-register: '' }
  - { id: 12, class: _, preferred-register: '' }
  - { id: 13, class: gprb, preferred-register: '' }
  - { id: 14, class: gprb, preferred-register: '' }
  - { id: 15, class: gprb, preferred-register: '' }
  - { id: 16, class: gprb, preferred-register: '' }
  - { id: 17, class: _, preferred-register: '' }
  - { id: 18, class: _, preferred-register: '' }
  - { id: 19, class: _, preferred-register: '' }
  - { id: 20, class: _, preferred-register: '' }
  - { id: 21, class: gprb, preferred-register: '' }
  - { id: 22, class: gprb, preferred-register: '' }
  - { id: 23, class: _, preferred-register: '' }
  - { id: 24, class: _, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.0.entry:
    liveins: $a2

    ; CHECK-LABEL: name: sext_i16_i64
    ; CHECK: liveins: $a2
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[SLLI:%[0-9]+]]:gpr = SLLI [[COPY]], 16
    ; CHECK-NEXT: [[SRAI:%[0-9]+]]:gpr = SRAI [[SLLI]], 16
    ; CHECK-NEXT: [[SRAI1:%[0-9]+]]:gpr = SRAI [[SLLI]], 31
    ; CHECK-NEXT: $a2 = COPY [[SRAI]]
    ; CHECK-NEXT: $a3 = COPY [[SRAI1]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2, implicit $a3
    %1:gprb(s32) = COPY $a2
    %21:gprb(s32) = G_CONSTANT i32 16
    %22:gprb(s32) = G_SHL %1, %21(s32)
    %13:gprb(s32) = G_CONSTANT i32 16
    %14:gprb(s32) = G_ASHR %22, %13(s32)
    %15:gprb(s32) = G_CONSTANT i32 31
    %16:gprb(s32) = G_ASHR %22, %15(s32)
    $a2 = COPY %14(s32)
    $a3 = COPY %16(s32)
    RETN implicit $a0, implicit $a2, implicit $a3

...
