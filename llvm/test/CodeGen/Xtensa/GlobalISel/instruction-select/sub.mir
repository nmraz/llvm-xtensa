# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -O0 -mtriple=xtensa -run-pass=instruction-select -verify-machineinstrs %s -o - | FileCheck %s
# RUN: llc -O0 -mtriple=xtensa -mcpu=lx7 -run-pass=instruction-select -verify-machineinstrs %s -o - | FileCheck %s --check-prefix=LX7
--- |
  ; ModuleID = 'sub.ll'
  source_filename = "sub.ll"
  target datalayout = "e-m:e-p:32:32-i64:64-n32-S128"
  target triple = "xtensa"

  define i1 @sub_i1(i1 %a, i1 %b) {
  entry:
    %sub = sub i1 %b, %a
    ret i1 %sub
  }

  define i8 @sub_i8(i8 %a, i8 %b) {
  entry:
    %sub = sub i8 %b, %a
    ret i8 %sub
  }

  define i16 @sub_i16(i16 %a, i16 %b) {
  entry:
    %sub = sub i16 %b, %a
    ret i16 %sub
  }

  define i32 @sub_i32(i32 %a, i32 %b) {
  entry:
    %sub = sub i32 %b, %a
    ret i32 %sub
  }

  define i33 @sub_i33(i33 %a, i33 %b) {
  entry:
    %sub = sub i33 %b, %a
    ret i33 %sub
  }

  define i64 @sub_i64(i64 %a, i64 %b) {
  entry:
    %sub = sub i64 %b, %a
    ret i64 %sub
  }

...
---
name:            sub_i1
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: _, preferred-register: '' }
  - { id: 2, class: gprb, preferred-register: '' }
  - { id: 3, class: gprb, preferred-register: '' }
  - { id: 4, class: _, preferred-register: '' }
  - { id: 5, class: _, preferred-register: '' }
  - { id: 6, class: _, preferred-register: '' }
  - { id: 7, class: _, preferred-register: '' }
  - { id: 8, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
  - { reg: '$a3', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.1.entry:
    liveins: $a2, $a3

    ; CHECK-LABEL: name: sub_i1
    ; CHECK: liveins: $a2, $a3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; CHECK-NEXT: [[SUB:%[0-9]+]]:gpr = SUB [[COPY1]], [[COPY]]
    ; CHECK-NEXT: $a2 = COPY [[SUB]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2
    ; LX7-LABEL: name: sub_i1
    ; LX7: liveins: $a2, $a3
    ; LX7-NEXT: {{  $}}
    ; LX7-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; LX7-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; LX7-NEXT: [[SUB:%[0-9]+]]:gpr = SUB [[COPY1]], [[COPY]]
    ; LX7-NEXT: $a2 = COPY [[SUB]]
    ; LX7-NEXT: RETN implicit $a0, implicit $a2
    %2:gprb(s32) = COPY $a2
    %3:gprb(s32) = COPY $a3
    %8:gprb(s32) = G_SUB %3, %2
    $a2 = COPY %8(s32)
    RETN implicit $a0, implicit $a2

...
---
name:            sub_i8
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: _, preferred-register: '' }
  - { id: 2, class: gprb, preferred-register: '' }
  - { id: 3, class: gprb, preferred-register: '' }
  - { id: 4, class: _, preferred-register: '' }
  - { id: 5, class: _, preferred-register: '' }
  - { id: 6, class: _, preferred-register: '' }
  - { id: 7, class: _, preferred-register: '' }
  - { id: 8, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
  - { reg: '$a3', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.1.entry:
    liveins: $a2, $a3

    ; CHECK-LABEL: name: sub_i8
    ; CHECK: liveins: $a2, $a3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; CHECK-NEXT: [[SUB:%[0-9]+]]:gpr = SUB [[COPY1]], [[COPY]]
    ; CHECK-NEXT: $a2 = COPY [[SUB]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2
    ; LX7-LABEL: name: sub_i8
    ; LX7: liveins: $a2, $a3
    ; LX7-NEXT: {{  $}}
    ; LX7-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; LX7-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; LX7-NEXT: [[SUB:%[0-9]+]]:gpr = SUB [[COPY1]], [[COPY]]
    ; LX7-NEXT: $a2 = COPY [[SUB]]
    ; LX7-NEXT: RETN implicit $a0, implicit $a2
    %2:gprb(s32) = COPY $a2
    %3:gprb(s32) = COPY $a3
    %8:gprb(s32) = G_SUB %3, %2
    $a2 = COPY %8(s32)
    RETN implicit $a0, implicit $a2

...
---
name:            sub_i16
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: _, preferred-register: '' }
  - { id: 2, class: gprb, preferred-register: '' }
  - { id: 3, class: gprb, preferred-register: '' }
  - { id: 4, class: _, preferred-register: '' }
  - { id: 5, class: _, preferred-register: '' }
  - { id: 6, class: _, preferred-register: '' }
  - { id: 7, class: _, preferred-register: '' }
  - { id: 8, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
  - { reg: '$a3', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.1.entry:
    liveins: $a2, $a3

    ; CHECK-LABEL: name: sub_i16
    ; CHECK: liveins: $a2, $a3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; CHECK-NEXT: [[SUB:%[0-9]+]]:gpr = SUB [[COPY1]], [[COPY]]
    ; CHECK-NEXT: $a2 = COPY [[SUB]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2
    ; LX7-LABEL: name: sub_i16
    ; LX7: liveins: $a2, $a3
    ; LX7-NEXT: {{  $}}
    ; LX7-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; LX7-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; LX7-NEXT: [[SUB:%[0-9]+]]:gpr = SUB [[COPY1]], [[COPY]]
    ; LX7-NEXT: $a2 = COPY [[SUB]]
    ; LX7-NEXT: RETN implicit $a0, implicit $a2
    %2:gprb(s32) = COPY $a2
    %3:gprb(s32) = COPY $a3
    %8:gprb(s32) = G_SUB %3, %2
    $a2 = COPY %8(s32)
    RETN implicit $a0, implicit $a2

...
---
name:            sub_i32
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: gprb, preferred-register: '' }
  - { id: 1, class: gprb, preferred-register: '' }
  - { id: 2, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
  - { reg: '$a3', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.1.entry:
    liveins: $a2, $a3

    ; CHECK-LABEL: name: sub_i32
    ; CHECK: liveins: $a2, $a3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; CHECK-NEXT: [[SUB:%[0-9]+]]:gpr = SUB [[COPY1]], [[COPY]]
    ; CHECK-NEXT: $a2 = COPY [[SUB]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2
    ; LX7-LABEL: name: sub_i32
    ; LX7: liveins: $a2, $a3
    ; LX7-NEXT: {{  $}}
    ; LX7-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; LX7-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; LX7-NEXT: [[SUB:%[0-9]+]]:gpr = SUB [[COPY1]], [[COPY]]
    ; LX7-NEXT: $a2 = COPY [[SUB]]
    ; LX7-NEXT: RETN implicit $a0, implicit $a2
    %0:gprb(s32) = COPY $a2
    %1:gprb(s32) = COPY $a3
    %2:gprb(s32) = G_SUB %1, %0
    $a2 = COPY %2(s32)
    RETN implicit $a0, implicit $a2

...
---
name:            sub_i33
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: _, preferred-register: '' }
  - { id: 2, class: gprb, preferred-register: '' }
  - { id: 3, class: gprb, preferred-register: '' }
  - { id: 4, class: _, preferred-register: '' }
  - { id: 5, class: gprb, preferred-register: '' }
  - { id: 6, class: gprb, preferred-register: '' }
  - { id: 7, class: _, preferred-register: '' }
  - { id: 8, class: _, preferred-register: '' }
  - { id: 9, class: _, preferred-register: '' }
  - { id: 10, class: _, preferred-register: '' }
  - { id: 11, class: _, preferred-register: '' }
  - { id: 12, class: _, preferred-register: '' }
  - { id: 13, class: _, preferred-register: '' }
  - { id: 14, class: _, preferred-register: '' }
  - { id: 15, class: _, preferred-register: '' }
  - { id: 16, class: _, preferred-register: '' }
  - { id: 17, class: _, preferred-register: '' }
  - { id: 18, class: _, preferred-register: '' }
  - { id: 19, class: gprb, preferred-register: '' }
  - { id: 20, class: _, preferred-register: '' }
  - { id: 21, class: gprb, preferred-register: '' }
  - { id: 22, class: _, preferred-register: '' }
  - { id: 23, class: gprb, preferred-register: '' }
  - { id: 24, class: gprb, preferred-register: '' }
  - { id: 25, class: _, preferred-register: '' }
  - { id: 26, class: _, preferred-register: '' }
  - { id: 27, class: gprb, preferred-register: '' }
  - { id: 28, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
  - { reg: '$a3', virtual-reg: '' }
  - { reg: '$a4', virtual-reg: '' }
  - { reg: '$a5', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.1.entry:
    liveins: $a2, $a3, $a4, $a5

    ; CHECK-LABEL: name: sub_i33
    ; CHECK: liveins: $a2, $a3, $a4, $a5
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:gpr = COPY $a4
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:gpr = COPY $a5
    ; CHECK-NEXT: [[SUB:%[0-9]+]]:gpr = SUB [[COPY2]], [[COPY]]
    ; CHECK-NEXT: [[MOVI:%[0-9]+]]:gpr = MOVI 0
    ; CHECK-NEXT: [[MOVI1:%[0-9]+]]:gpr = MOVI 1
    ; CHECK-NEXT: [[SELECT_LTU:%[0-9]+]]:gpr = SELECT_LTU [[COPY2]], [[COPY]], [[MOVI1]], [[MOVI]]
    ; CHECK-NEXT: [[SUB1:%[0-9]+]]:gpr = SUB [[COPY3]], [[COPY1]]
    ; CHECK-NEXT: [[EXTUI:%[0-9]+]]:gpr = EXTUI [[SELECT_LTU]], 0, 1
    ; CHECK-NEXT: [[SUB2:%[0-9]+]]:gpr = SUB [[SUB1]], [[EXTUI]]
    ; CHECK-NEXT: $a2 = COPY [[SUB]]
    ; CHECK-NEXT: $a3 = COPY [[SUB2]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2, implicit $a3
    ; LX7-LABEL: name: sub_i33
    ; LX7: liveins: $a2, $a3, $a4, $a5
    ; LX7-NEXT: {{  $}}
    ; LX7-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; LX7-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; LX7-NEXT: [[COPY2:%[0-9]+]]:gpr = COPY $a4
    ; LX7-NEXT: [[COPY3:%[0-9]+]]:gpr = COPY $a5
    ; LX7-NEXT: [[SUB:%[0-9]+]]:gpr = SUB [[COPY2]], [[COPY]]
    ; LX7-NEXT: [[SALTU:%[0-9]+]]:gpr = SALTU [[COPY2]], [[COPY]]
    ; LX7-NEXT: [[SUB1:%[0-9]+]]:gpr = SUB [[COPY3]], [[COPY1]]
    ; LX7-NEXT: [[EXTUI:%[0-9]+]]:gpr = EXTUI [[SALTU]], 0, 1
    ; LX7-NEXT: [[SUB2:%[0-9]+]]:gpr = SUB [[SUB1]], [[EXTUI]]
    ; LX7-NEXT: $a2 = COPY [[SUB]]
    ; LX7-NEXT: $a3 = COPY [[SUB2]]
    ; LX7-NEXT: RETN implicit $a0, implicit $a2, implicit $a3
    %2:gprb(s32) = COPY $a2
    %3:gprb(s32) = COPY $a3
    %5:gprb(s32) = COPY $a4
    %6:gprb(s32) = COPY $a5
    %19:gprb(s32) = G_SUB %5, %2
    %27:gprb(s32) = G_ICMP intpred(ult), %5(s32), %2
    %23:gprb(s32) = G_SUB %6, %3
    %28:gprb(s32) = G_CONSTANT i32 1
    %24:gprb(s32) = G_AND %27, %28
    %21:gprb(s32) = G_SUB %23, %24
    $a2 = COPY %19(s32)
    $a3 = COPY %21(s32)
    RETN implicit $a0, implicit $a2, implicit $a3

...
---
name:            sub_i64
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: _, preferred-register: '' }
  - { id: 2, class: gprb, preferred-register: '' }
  - { id: 3, class: gprb, preferred-register: '' }
  - { id: 4, class: gprb, preferred-register: '' }
  - { id: 5, class: gprb, preferred-register: '' }
  - { id: 6, class: _, preferred-register: '' }
  - { id: 7, class: _, preferred-register: '' }
  - { id: 8, class: _, preferred-register: '' }
  - { id: 9, class: _, preferred-register: '' }
  - { id: 10, class: _, preferred-register: '' }
  - { id: 11, class: _, preferred-register: '' }
  - { id: 12, class: _, preferred-register: '' }
  - { id: 13, class: gprb, preferred-register: '' }
  - { id: 14, class: _, preferred-register: '' }
  - { id: 15, class: gprb, preferred-register: '' }
  - { id: 16, class: _, preferred-register: '' }
  - { id: 17, class: gprb, preferred-register: '' }
  - { id: 18, class: gprb, preferred-register: '' }
  - { id: 19, class: _, preferred-register: '' }
  - { id: 20, class: _, preferred-register: '' }
  - { id: 21, class: gprb, preferred-register: '' }
  - { id: 22, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
  - { reg: '$a3', virtual-reg: '' }
  - { reg: '$a4', virtual-reg: '' }
  - { reg: '$a5', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.1.entry:
    liveins: $a2, $a3, $a4, $a5

    ; CHECK-LABEL: name: sub_i64
    ; CHECK: liveins: $a2, $a3, $a4, $a5
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:gpr = COPY $a4
    ; CHECK-NEXT: [[COPY3:%[0-9]+]]:gpr = COPY $a5
    ; CHECK-NEXT: [[SUB:%[0-9]+]]:gpr = SUB [[COPY2]], [[COPY]]
    ; CHECK-NEXT: [[MOVI:%[0-9]+]]:gpr = MOVI 0
    ; CHECK-NEXT: [[MOVI1:%[0-9]+]]:gpr = MOVI 1
    ; CHECK-NEXT: [[SELECT_LTU:%[0-9]+]]:gpr = SELECT_LTU [[COPY2]], [[COPY]], [[MOVI1]], [[MOVI]]
    ; CHECK-NEXT: [[SUB1:%[0-9]+]]:gpr = SUB [[COPY3]], [[COPY1]]
    ; CHECK-NEXT: [[EXTUI:%[0-9]+]]:gpr = EXTUI [[SELECT_LTU]], 0, 1
    ; CHECK-NEXT: [[SUB2:%[0-9]+]]:gpr = SUB [[SUB1]], [[EXTUI]]
    ; CHECK-NEXT: $a2 = COPY [[SUB]]
    ; CHECK-NEXT: $a3 = COPY [[SUB2]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2, implicit $a3
    ; LX7-LABEL: name: sub_i64
    ; LX7: liveins: $a2, $a3, $a4, $a5
    ; LX7-NEXT: {{  $}}
    ; LX7-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; LX7-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; LX7-NEXT: [[COPY2:%[0-9]+]]:gpr = COPY $a4
    ; LX7-NEXT: [[COPY3:%[0-9]+]]:gpr = COPY $a5
    ; LX7-NEXT: [[SUB:%[0-9]+]]:gpr = SUB [[COPY2]], [[COPY]]
    ; LX7-NEXT: [[SALTU:%[0-9]+]]:gpr = SALTU [[COPY2]], [[COPY]]
    ; LX7-NEXT: [[SUB1:%[0-9]+]]:gpr = SUB [[COPY3]], [[COPY1]]
    ; LX7-NEXT: [[EXTUI:%[0-9]+]]:gpr = EXTUI [[SALTU]], 0, 1
    ; LX7-NEXT: [[SUB2:%[0-9]+]]:gpr = SUB [[SUB1]], [[EXTUI]]
    ; LX7-NEXT: $a2 = COPY [[SUB]]
    ; LX7-NEXT: $a3 = COPY [[SUB2]]
    ; LX7-NEXT: RETN implicit $a0, implicit $a2, implicit $a3
    %2:gprb(s32) = COPY $a2
    %3:gprb(s32) = COPY $a3
    %4:gprb(s32) = COPY $a4
    %5:gprb(s32) = COPY $a5
    %13:gprb(s32) = G_SUB %4, %2
    %21:gprb(s32) = G_ICMP intpred(ult), %4(s32), %2
    %17:gprb(s32) = G_SUB %5, %3
    %22:gprb(s32) = G_CONSTANT i32 1
    %18:gprb(s32) = G_AND %21, %22
    %15:gprb(s32) = G_SUB %17, %18
    $a2 = COPY %13(s32)
    $a3 = COPY %15(s32)
    RETN implicit $a0, implicit $a2, implicit $a3

...
