# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -O0 -mtriple=xtensa -run-pass=instruction-select -verify-machineinstrs %s -o - | FileCheck %s
--- |
  ; ModuleID = 'llvm/test/CodeGen/Xtensa/GlobalISel/regbankselect/divrem.mir'
  source_filename = "divrem.ll"
  target datalayout = "e-m:e-p:32:32-i64:64-n32-S128"
  target triple = "xtensa"

  define i8 @sdiv_i8(i8 %a, i8 %b) {
  entry:
    %sdiv = sdiv i8 %a, %b
    ret i8 %sdiv
  }

  define i8 @udiv_i8(i8 %a, i8 %b) {
  entry:
    %udiv = udiv i8 %a, %b
    ret i8 %udiv
  }

  define i8 @srem_i8(i8 %a, i8 %b) {
  entry:
    %srem = srem i8 %a, %b
    ret i8 %srem
  }

  define i8 @urem_i8(i8 %a, i8 %b) {
  entry:
    %urem = urem i8 %a, %b
    ret i8 %urem
  }

  define i16 @sdiv_i16(i16 %a, i16 %b) {
  entry:
    %sdiv = sdiv i16 %a, %b
    ret i16 %sdiv
  }

  define i16 @udiv_i16(i16 %a, i16 %b) {
  entry:
    %udiv = udiv i16 %a, %b
    ret i16 %udiv
  }

  define i16 @srem_i16(i16 %a, i16 %b) {
  entry:
    %srem = srem i16 %a, %b
    ret i16 %srem
  }

  define i16 @urem_i16(i16 %a, i16 %b) {
  entry:
    %urem = urem i16 %a, %b
    ret i16 %urem
  }

  define i32 @sdiv_i32(i32 %a, i32 %b) {
  entry:
    %sdiv = sdiv i32 %a, %b
    ret i32 %sdiv
  }

  define i32 @udiv_i32(i32 %a, i32 %b) {
  entry:
    %udiv = udiv i32 %a, %b
    ret i32 %udiv
  }

  define i32 @srem_i32(i32 %a, i32 %b) {
  entry:
    %srem = srem i32 %a, %b
    ret i32 %srem
  }

  define i32 @urem_i32(i32 %a, i32 %b) {
  entry:
    %urem = urem i32 %a, %b
    ret i32 %urem
  }

...
---
name:            sdiv_i8
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: _, preferred-register: '' }
  - { id: 2, class: gprb, preferred-register: '' }
  - { id: 3, class: gprb, preferred-register: '' }
  - { id: 4, class: _, preferred-register: '' }
  - { id: 5, class: _, preferred-register: '' }
  - { id: 6, class: gprb, preferred-register: '' }
  - { id: 7, class: gprb, preferred-register: '' }
  - { id: 8, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
  - { reg: '$a3', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.1.entry:
    liveins: $a2, $a3

    ; CHECK-LABEL: name: sdiv_i8
    ; CHECK: liveins: $a2, $a3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; CHECK-NEXT: [[SLLI:%[0-9]+]]:gpr = SLLI [[COPY]], 24
    ; CHECK-NEXT: [[SRAI:%[0-9]+]]:gpr = SRAI [[SLLI]], 24
    ; CHECK-NEXT: [[SLLI1:%[0-9]+]]:gpr = SLLI [[COPY1]], 24
    ; CHECK-NEXT: [[SRAI1:%[0-9]+]]:gpr = SRAI [[SLLI1]], 24
    ; CHECK-NEXT: [[QUOS:%[0-9]+]]:gpr = QUOS [[SRAI]], [[SRAI1]]
    ; CHECK-NEXT: $a2 = COPY [[QUOS]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2
    %2:gprb(s32) = COPY $a2
    %3:gprb(s32) = COPY $a3
    %6:gprb(s32) = G_SEXT_INREG %2, 8
    %7:gprb(s32) = G_SEXT_INREG %3, 8
    %8:gprb(s32) = G_SDIV %6, %7
    $a2 = COPY %8(s32)
    RETN implicit $a0, implicit $a2

...
---
name:            udiv_i8
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: _, preferred-register: '' }
  - { id: 2, class: gprb, preferred-register: '' }
  - { id: 3, class: gprb, preferred-register: '' }
  - { id: 4, class: _, preferred-register: '' }
  - { id: 5, class: _, preferred-register: '' }
  - { id: 6, class: gprb, preferred-register: '' }
  - { id: 7, class: gprb, preferred-register: '' }
  - { id: 8, class: gprb, preferred-register: '' }
  - { id: 9, class: gprb, preferred-register: '' }
  - { id: 10, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
  - { reg: '$a3', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.1.entry:
    liveins: $a2, $a3

    ; CHECK-LABEL: name: udiv_i8
    ; CHECK: liveins: $a2, $a3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; CHECK-NEXT: [[EXTUI:%[0-9]+]]:gpr = EXTUI [[COPY]], 0, 8
    ; CHECK-NEXT: [[EXTUI1:%[0-9]+]]:gpr = EXTUI [[COPY1]], 0, 8
    ; CHECK-NEXT: [[QUOU:%[0-9]+]]:gpr = QUOU [[EXTUI]], [[EXTUI1]]
    ; CHECK-NEXT: $a2 = COPY [[QUOU]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2
    %2:gprb(s32) = COPY $a2
    %3:gprb(s32) = COPY $a3
    %10:gprb(s32) = G_CONSTANT i32 255
    %6:gprb(s32) = G_AND %2, %10
    %9:gprb(s32) = G_CONSTANT i32 255
    %7:gprb(s32) = G_AND %3, %9
    %8:gprb(s32) = G_UDIV %6, %7
    $a2 = COPY %8(s32)
    RETN implicit $a0, implicit $a2

...
---
name:            srem_i8
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: _, preferred-register: '' }
  - { id: 2, class: gprb, preferred-register: '' }
  - { id: 3, class: gprb, preferred-register: '' }
  - { id: 4, class: _, preferred-register: '' }
  - { id: 5, class: _, preferred-register: '' }
  - { id: 6, class: gprb, preferred-register: '' }
  - { id: 7, class: gprb, preferred-register: '' }
  - { id: 8, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
  - { reg: '$a3', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.1.entry:
    liveins: $a2, $a3

    ; CHECK-LABEL: name: srem_i8
    ; CHECK: liveins: $a2, $a3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; CHECK-NEXT: [[SLLI:%[0-9]+]]:gpr = SLLI [[COPY]], 24
    ; CHECK-NEXT: [[SRAI:%[0-9]+]]:gpr = SRAI [[SLLI]], 24
    ; CHECK-NEXT: [[SLLI1:%[0-9]+]]:gpr = SLLI [[COPY1]], 24
    ; CHECK-NEXT: [[SRAI1:%[0-9]+]]:gpr = SRAI [[SLLI1]], 24
    ; CHECK-NEXT: [[REMS:%[0-9]+]]:gpr = REMS [[SRAI]], [[SRAI1]]
    ; CHECK-NEXT: $a2 = COPY [[REMS]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2
    %2:gprb(s32) = COPY $a2
    %3:gprb(s32) = COPY $a3
    %6:gprb(s32) = G_SEXT_INREG %2, 8
    %7:gprb(s32) = G_SEXT_INREG %3, 8
    %8:gprb(s32) = G_SREM %6, %7
    $a2 = COPY %8(s32)
    RETN implicit $a0, implicit $a2

...
---
name:            urem_i8
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: _, preferred-register: '' }
  - { id: 2, class: gprb, preferred-register: '' }
  - { id: 3, class: gprb, preferred-register: '' }
  - { id: 4, class: _, preferred-register: '' }
  - { id: 5, class: _, preferred-register: '' }
  - { id: 6, class: gprb, preferred-register: '' }
  - { id: 7, class: gprb, preferred-register: '' }
  - { id: 8, class: gprb, preferred-register: '' }
  - { id: 9, class: gprb, preferred-register: '' }
  - { id: 10, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
  - { reg: '$a3', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.1.entry:
    liveins: $a2, $a3

    ; CHECK-LABEL: name: urem_i8
    ; CHECK: liveins: $a2, $a3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; CHECK-NEXT: [[EXTUI:%[0-9]+]]:gpr = EXTUI [[COPY]], 0, 8
    ; CHECK-NEXT: [[EXTUI1:%[0-9]+]]:gpr = EXTUI [[COPY1]], 0, 8
    ; CHECK-NEXT: [[REMU:%[0-9]+]]:gpr = REMU [[EXTUI]], [[EXTUI1]]
    ; CHECK-NEXT: $a2 = COPY [[REMU]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2
    %2:gprb(s32) = COPY $a2
    %3:gprb(s32) = COPY $a3
    %10:gprb(s32) = G_CONSTANT i32 255
    %6:gprb(s32) = G_AND %2, %10
    %9:gprb(s32) = G_CONSTANT i32 255
    %7:gprb(s32) = G_AND %3, %9
    %8:gprb(s32) = G_UREM %6, %7
    $a2 = COPY %8(s32)
    RETN implicit $a0, implicit $a2

...
---
name:            sdiv_i16
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: _, preferred-register: '' }
  - { id: 2, class: gprb, preferred-register: '' }
  - { id: 3, class: gprb, preferred-register: '' }
  - { id: 4, class: _, preferred-register: '' }
  - { id: 5, class: _, preferred-register: '' }
  - { id: 6, class: gprb, preferred-register: '' }
  - { id: 7, class: gprb, preferred-register: '' }
  - { id: 8, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
  - { reg: '$a3', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.1.entry:
    liveins: $a2, $a3

    ; CHECK-LABEL: name: sdiv_i16
    ; CHECK: liveins: $a2, $a3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; CHECK-NEXT: [[SLLI:%[0-9]+]]:gpr = SLLI [[COPY]], 16
    ; CHECK-NEXT: [[SRAI:%[0-9]+]]:gpr = SRAI [[SLLI]], 16
    ; CHECK-NEXT: [[SLLI1:%[0-9]+]]:gpr = SLLI [[COPY1]], 16
    ; CHECK-NEXT: [[SRAI1:%[0-9]+]]:gpr = SRAI [[SLLI1]], 16
    ; CHECK-NEXT: [[QUOS:%[0-9]+]]:gpr = QUOS [[SRAI]], [[SRAI1]]
    ; CHECK-NEXT: $a2 = COPY [[QUOS]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2
    %2:gprb(s32) = COPY $a2
    %3:gprb(s32) = COPY $a3
    %6:gprb(s32) = G_SEXT_INREG %2, 16
    %7:gprb(s32) = G_SEXT_INREG %3, 16
    %8:gprb(s32) = G_SDIV %6, %7
    $a2 = COPY %8(s32)
    RETN implicit $a0, implicit $a2

...
---
name:            udiv_i16
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: _, preferred-register: '' }
  - { id: 2, class: gprb, preferred-register: '' }
  - { id: 3, class: gprb, preferred-register: '' }
  - { id: 4, class: _, preferred-register: '' }
  - { id: 5, class: _, preferred-register: '' }
  - { id: 6, class: gprb, preferred-register: '' }
  - { id: 7, class: gprb, preferred-register: '' }
  - { id: 8, class: gprb, preferred-register: '' }
  - { id: 9, class: gprb, preferred-register: '' }
  - { id: 10, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
  - { reg: '$a3', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.1.entry:
    liveins: $a2, $a3

    ; CHECK-LABEL: name: udiv_i16
    ; CHECK: liveins: $a2, $a3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; CHECK-NEXT: [[EXTUI:%[0-9]+]]:gpr = EXTUI [[COPY]], 0, 16
    ; CHECK-NEXT: [[EXTUI1:%[0-9]+]]:gpr = EXTUI [[COPY1]], 0, 16
    ; CHECK-NEXT: [[QUOU:%[0-9]+]]:gpr = QUOU [[EXTUI]], [[EXTUI1]]
    ; CHECK-NEXT: $a2 = COPY [[QUOU]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2
    %2:gprb(s32) = COPY $a2
    %3:gprb(s32) = COPY $a3
    %10:gprb(s32) = G_CONSTANT i32 65535
    %6:gprb(s32) = G_AND %2, %10
    %9:gprb(s32) = G_CONSTANT i32 65535
    %7:gprb(s32) = G_AND %3, %9
    %8:gprb(s32) = G_UDIV %6, %7
    $a2 = COPY %8(s32)
    RETN implicit $a0, implicit $a2

...
---
name:            srem_i16
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: _, preferred-register: '' }
  - { id: 2, class: gprb, preferred-register: '' }
  - { id: 3, class: gprb, preferred-register: '' }
  - { id: 4, class: _, preferred-register: '' }
  - { id: 5, class: _, preferred-register: '' }
  - { id: 6, class: gprb, preferred-register: '' }
  - { id: 7, class: gprb, preferred-register: '' }
  - { id: 8, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
  - { reg: '$a3', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.1.entry:
    liveins: $a2, $a3

    ; CHECK-LABEL: name: srem_i16
    ; CHECK: liveins: $a2, $a3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; CHECK-NEXT: [[SLLI:%[0-9]+]]:gpr = SLLI [[COPY]], 16
    ; CHECK-NEXT: [[SRAI:%[0-9]+]]:gpr = SRAI [[SLLI]], 16
    ; CHECK-NEXT: [[SLLI1:%[0-9]+]]:gpr = SLLI [[COPY1]], 16
    ; CHECK-NEXT: [[SRAI1:%[0-9]+]]:gpr = SRAI [[SLLI1]], 16
    ; CHECK-NEXT: [[REMS:%[0-9]+]]:gpr = REMS [[SRAI]], [[SRAI1]]
    ; CHECK-NEXT: $a2 = COPY [[REMS]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2
    %2:gprb(s32) = COPY $a2
    %3:gprb(s32) = COPY $a3
    %6:gprb(s32) = G_SEXT_INREG %2, 16
    %7:gprb(s32) = G_SEXT_INREG %3, 16
    %8:gprb(s32) = G_SREM %6, %7
    $a2 = COPY %8(s32)
    RETN implicit $a0, implicit $a2

...
---
name:            urem_i16
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: _, preferred-register: '' }
  - { id: 2, class: gprb, preferred-register: '' }
  - { id: 3, class: gprb, preferred-register: '' }
  - { id: 4, class: _, preferred-register: '' }
  - { id: 5, class: _, preferred-register: '' }
  - { id: 6, class: gprb, preferred-register: '' }
  - { id: 7, class: gprb, preferred-register: '' }
  - { id: 8, class: gprb, preferred-register: '' }
  - { id: 9, class: gprb, preferred-register: '' }
  - { id: 10, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
  - { reg: '$a3', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.1.entry:
    liveins: $a2, $a3

    ; CHECK-LABEL: name: urem_i16
    ; CHECK: liveins: $a2, $a3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; CHECK-NEXT: [[EXTUI:%[0-9]+]]:gpr = EXTUI [[COPY]], 0, 16
    ; CHECK-NEXT: [[EXTUI1:%[0-9]+]]:gpr = EXTUI [[COPY1]], 0, 16
    ; CHECK-NEXT: [[REMU:%[0-9]+]]:gpr = REMU [[EXTUI]], [[EXTUI1]]
    ; CHECK-NEXT: $a2 = COPY [[REMU]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2
    %2:gprb(s32) = COPY $a2
    %3:gprb(s32) = COPY $a3
    %10:gprb(s32) = G_CONSTANT i32 65535
    %6:gprb(s32) = G_AND %2, %10
    %9:gprb(s32) = G_CONSTANT i32 65535
    %7:gprb(s32) = G_AND %3, %9
    %8:gprb(s32) = G_UREM %6, %7
    $a2 = COPY %8(s32)
    RETN implicit $a0, implicit $a2

...
---
name:            sdiv_i32
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: gprb, preferred-register: '' }
  - { id: 1, class: gprb, preferred-register: '' }
  - { id: 2, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
  - { reg: '$a3', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.1.entry:
    liveins: $a2, $a3

    ; CHECK-LABEL: name: sdiv_i32
    ; CHECK: liveins: $a2, $a3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; CHECK-NEXT: [[QUOS:%[0-9]+]]:gpr = QUOS [[COPY]], [[COPY1]]
    ; CHECK-NEXT: $a2 = COPY [[QUOS]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2
    %0:gprb(s32) = COPY $a2
    %1:gprb(s32) = COPY $a3
    %2:gprb(s32) = G_SDIV %0, %1
    $a2 = COPY %2(s32)
    RETN implicit $a0, implicit $a2

...
---
name:            udiv_i32
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: gprb, preferred-register: '' }
  - { id: 1, class: gprb, preferred-register: '' }
  - { id: 2, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
  - { reg: '$a3', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.1.entry:
    liveins: $a2, $a3

    ; CHECK-LABEL: name: udiv_i32
    ; CHECK: liveins: $a2, $a3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; CHECK-NEXT: [[QUOU:%[0-9]+]]:gpr = QUOU [[COPY]], [[COPY1]]
    ; CHECK-NEXT: $a2 = COPY [[QUOU]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2
    %0:gprb(s32) = COPY $a2
    %1:gprb(s32) = COPY $a3
    %2:gprb(s32) = G_UDIV %0, %1
    $a2 = COPY %2(s32)
    RETN implicit $a0, implicit $a2

...
---
name:            srem_i32
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: gprb, preferred-register: '' }
  - { id: 1, class: gprb, preferred-register: '' }
  - { id: 2, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
  - { reg: '$a3', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.1.entry:
    liveins: $a2, $a3

    ; CHECK-LABEL: name: srem_i32
    ; CHECK: liveins: $a2, $a3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; CHECK-NEXT: [[REMS:%[0-9]+]]:gpr = REMS [[COPY]], [[COPY1]]
    ; CHECK-NEXT: $a2 = COPY [[REMS]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2
    %0:gprb(s32) = COPY $a2
    %1:gprb(s32) = COPY $a3
    %2:gprb(s32) = G_SREM %0, %1
    $a2 = COPY %2(s32)
    RETN implicit $a0, implicit $a2

...
---
name:            urem_i32
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: gprb, preferred-register: '' }
  - { id: 1, class: gprb, preferred-register: '' }
  - { id: 2, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
  - { reg: '$a3', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.1.entry:
    liveins: $a2, $a3

    ; CHECK-LABEL: name: urem_i32
    ; CHECK: liveins: $a2, $a3
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; CHECK-NEXT: [[REMU:%[0-9]+]]:gpr = REMU [[COPY]], [[COPY1]]
    ; CHECK-NEXT: $a2 = COPY [[REMU]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2
    %0:gprb(s32) = COPY $a2
    %1:gprb(s32) = COPY $a3
    %2:gprb(s32) = G_UREM %0, %1
    $a2 = COPY %2(s32)
    RETN implicit $a0, implicit $a2

...
