# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -O0 -mtriple=xtensa -run-pass=instruction-select -verify-machineinstrs %s -o - | FileCheck %s
# RUN: llc -O0 -mtriple=xtensa -mcpu=lx7 -run-pass=instruction-select -verify-machineinstrs %s -o - | FileCheck %s --check-prefix=LX7
--- |
  ; ModuleID = 'shift_var_wide.ll'
  source_filename = "shift_var_wide.ll"
  target datalayout = "e-m:e-p:32:32-i64:64-n32-S128"
  target triple = "xtensa"

  define i33 @shl_i33(i33 %val, i33 %shamt) {
  entry:
    %shl = shl i33 %val, %shamt
    ret i33 %shl
  }

  define i64 @shl_i64(i64 %val, i64 %shamt) {
  entry:
    %shl = shl i64 %val, %shamt
    ret i64 %shl
  }

  define i33 @lshr_i33(i33 %val, i33 %shamt) {
  entry:
    %lshr = lshr i33 %val, %shamt
    ret i33 %lshr
  }

  define i64 @lshr_i64(i64 %val, i64 %shamt) {
  entry:
    %lshr = lshr i64 %val, %shamt
    ret i64 %lshr
  }

  define i33 @ashr_i33(i33 %val, i33 %shamt) {
  entry:
    %ashr = ashr i33 %val, %shamt
    ret i33 %ashr
  }

  define i64 @ashr_i64(i64 %val, i64 %shamt) {
  entry:
    %ashr = ashr i64 %val, %shamt
    ret i64 %ashr
  }

...
---
name:            shl_i33
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: _, preferred-register: '' }
  - { id: 2, class: gpr, preferred-register: '' }
  - { id: 3, class: gpr, preferred-register: '' }
  - { id: 4, class: _, preferred-register: '' }
  - { id: 5, class: gprb, preferred-register: '' }
  - { id: 6, class: _, preferred-register: '' }
  - { id: 7, class: _, preferred-register: '' }
  - { id: 8, class: _, preferred-register: '' }
  - { id: 9, class: _, preferred-register: '' }
  - { id: 10, class: _, preferred-register: '' }
  - { id: 11, class: _, preferred-register: '' }
  - { id: 12, class: _, preferred-register: '' }
  - { id: 13, class: _, preferred-register: '' }
  - { id: 14, class: _, preferred-register: '' }
  - { id: 15, class: gprb, preferred-register: '' }
  - { id: 16, class: _, preferred-register: '' }
  - { id: 17, class: _, preferred-register: '' }
  - { id: 18, class: gprb, preferred-register: '' }
  - { id: 19, class: gprb, preferred-register: '' }
  - { id: 20, class: gprb, preferred-register: '' }
  - { id: 21, class: _, preferred-register: '' }
  - { id: 22, class: _, preferred-register: '' }
  - { id: 23, class: gpr, preferred-register: '' }
  - { id: 24, class: gpr, preferred-register: '' }
  - { id: 25, class: gpr, preferred-register: '' }
  - { id: 26, class: gprb, preferred-register: '' }
  - { id: 27, class: gprb, preferred-register: '' }
  - { id: 28, class: gpr, preferred-register: '' }
  - { id: 29, class: gprb, preferred-register: '' }
  - { id: 30, class: gprb, preferred-register: '' }
  - { id: 31, class: gprb, preferred-register: '' }
  - { id: 32, class: _, preferred-register: '' }
  - { id: 33, class: _, preferred-register: '' }
  - { id: 34, class: _, preferred-register: '' }
  - { id: 35, class: gprb, preferred-register: '' }
  - { id: 36, class: gprb, preferred-register: '' }
  - { id: 37, class: _, preferred-register: '' }
  - { id: 38, class: _, preferred-register: '' }
  - { id: 39, class: _, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
  - { reg: '$a3', virtual-reg: '' }
  - { reg: '$a4', virtual-reg: '' }
  - { reg: '$a5', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.1.entry:
    liveins: $a2, $a3, $a4, $a5

    ; CHECK-LABEL: name: shl_i33
    ; CHECK: liveins: $a2, $a3, $a4, $a5
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:gpr = COPY $a4
    ; CHECK-NEXT: [[MOVI:%[0-9]+]]:gpr = MOVI 32
    ; CHECK-NEXT: [[ADDI:%[0-9]+]]:gpr = ADDI [[COPY2]], -32
    ; CHECK-NEXT: [[SUB:%[0-9]+]]:gpr = SUB [[MOVI]], [[COPY2]]
    ; CHECK-NEXT: [[MOVI1:%[0-9]+]]:gpr = MOVI 0
    ; CHECK-NEXT: [[MOVI2:%[0-9]+]]:gpr = MOVI 1
    ; CHECK-NEXT: [[SELECT_LTUI:%[0-9]+]]:gpr = SELECT_LTUI [[COPY2]], 32, [[MOVI2]], [[MOVI1]]
    ; CHECK-NEXT: SSL [[COPY2]], implicit-def $sar
    ; CHECK-NEXT: [[SLL:%[0-9]+]]:gpr = SLL [[COPY]], implicit $sar
    ; CHECK-NEXT: SSR [[SUB]], implicit-def $sar
    ; CHECK-NEXT: [[SRL:%[0-9]+]]:gpr = SRL [[COPY]], implicit $sar
    ; CHECK-NEXT: SSL [[COPY2]], implicit-def $sar
    ; CHECK-NEXT: [[SLL1:%[0-9]+]]:gpr = SLL [[COPY1]], implicit $sar
    ; CHECK-NEXT: [[OR:%[0-9]+]]:gpr = OR [[SRL]], [[SLL1]]
    ; CHECK-NEXT: [[MOVI3:%[0-9]+]]:gpr = MOVI 0
    ; CHECK-NEXT: SSL [[ADDI]], implicit-def $sar
    ; CHECK-NEXT: [[SLL2:%[0-9]+]]:gpr = SLL [[COPY]], implicit $sar
    ; CHECK-NEXT: [[MOVEQZ:%[0-9]+]]:gpr = MOVEQZ [[SLL]], [[MOVI3]], [[SELECT_LTUI]]
    ; CHECK-NEXT: [[MOVEQZ1:%[0-9]+]]:gpr = MOVEQZ [[OR]], [[SLL2]], [[SELECT_LTUI]]
    ; CHECK-NEXT: [[MOVEQZ2:%[0-9]+]]:gpr = MOVEQZ [[MOVEQZ1]], [[COPY1]], [[COPY2]]
    ; CHECK-NEXT: $a2 = COPY [[MOVEQZ]]
    ; CHECK-NEXT: $a3 = COPY [[MOVEQZ2]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2, implicit $a3
    ; LX7-LABEL: name: shl_i33
    ; LX7: liveins: $a2, $a3, $a4, $a5
    ; LX7-NEXT: {{  $}}
    ; LX7-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; LX7-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; LX7-NEXT: [[COPY2:%[0-9]+]]:gpr = COPY $a4
    ; LX7-NEXT: [[MOVI:%[0-9]+]]:gpr = MOVI 32
    ; LX7-NEXT: [[ADDI:%[0-9]+]]:gpr = ADDI [[COPY2]], -32
    ; LX7-NEXT: [[SUB:%[0-9]+]]:gpr = SUB [[MOVI]], [[COPY2]]
    ; LX7-NEXT: [[SALTU:%[0-9]+]]:gpr = SALTU [[COPY2]], [[MOVI]]
    ; LX7-NEXT: SSL [[COPY2]], implicit-def $sar
    ; LX7-NEXT: [[SLL:%[0-9]+]]:gpr = SLL [[COPY]], implicit $sar
    ; LX7-NEXT: SSR [[SUB]], implicit-def $sar
    ; LX7-NEXT: [[SRL:%[0-9]+]]:gpr = SRL [[COPY]], implicit $sar
    ; LX7-NEXT: SSL [[COPY2]], implicit-def $sar
    ; LX7-NEXT: [[SLL1:%[0-9]+]]:gpr = SLL [[COPY1]], implicit $sar
    ; LX7-NEXT: [[OR:%[0-9]+]]:gpr = OR [[SRL]], [[SLL1]]
    ; LX7-NEXT: [[MOVI1:%[0-9]+]]:gpr = MOVI 0
    ; LX7-NEXT: SSL [[ADDI]], implicit-def $sar
    ; LX7-NEXT: [[SLL2:%[0-9]+]]:gpr = SLL [[COPY]], implicit $sar
    ; LX7-NEXT: [[MOVEQZ:%[0-9]+]]:gpr = MOVEQZ [[SLL]], [[MOVI1]], [[SALTU]]
    ; LX7-NEXT: [[MOVEQZ1:%[0-9]+]]:gpr = MOVEQZ [[OR]], [[SLL2]], [[SALTU]]
    ; LX7-NEXT: [[MOVEQZ2:%[0-9]+]]:gpr = MOVEQZ [[MOVEQZ1]], [[COPY1]], [[COPY2]]
    ; LX7-NEXT: $a2 = COPY [[MOVEQZ]]
    ; LX7-NEXT: $a3 = COPY [[MOVEQZ2]]
    ; LX7-NEXT: RETN implicit $a0, implicit $a2, implicit $a3
    %2:gpr(s32) = COPY $a2
    %3:gpr(s32) = COPY $a3
    %5:gprb(s32) = COPY $a4
    %15:gprb(s32) = G_CONSTANT i32 32
    %18:gprb(s32) = G_SUB %5, %15
    %19:gprb(s32) = G_SUB %15, %5
    %20:gprb(s32) = G_CONSTANT i32 0
    %36:gprb(s32) = G_ICMP intpred(ult), %5(s32), %15
    %35:gprb(s32) = G_ICMP intpred(eq), %5(s32), %20
    G_XTENSA_SSL_INRANGE %5(s32), implicit-def $sar
    %23:gpr(s32) = SLL %2(s32), implicit $sar
    G_XTENSA_SSR_INRANGE %19(s32), implicit-def $sar
    %24:gpr(s32) = SRL %2(s32), implicit $sar
    G_XTENSA_SSL_INRANGE %5(s32), implicit-def $sar
    %25:gpr(s32) = SLL %3(s32), implicit $sar
    %26:gprb(s32) = G_OR %24, %25
    %27:gprb(s32) = G_CONSTANT i32 0
    G_XTENSA_SSL_INRANGE %18(s32), implicit-def $sar
    %28:gpr(s32) = SLL %2(s32), implicit $sar
    %29:gprb(s32) = G_SELECT %36(s32), %23, %27
    %30:gprb(s32) = G_SELECT %36(s32), %26, %28
    %31:gprb(s32) = G_SELECT %35(s32), %3, %30
    $a2 = COPY %29(s32)
    $a3 = COPY %31(s32)
    RETN implicit $a0, implicit $a2, implicit $a3

...
---
name:            shl_i64
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: _, preferred-register: '' }
  - { id: 2, class: gpr, preferred-register: '' }
  - { id: 3, class: gpr, preferred-register: '' }
  - { id: 4, class: gprb, preferred-register: '' }
  - { id: 5, class: _, preferred-register: '' }
  - { id: 6, class: _, preferred-register: '' }
  - { id: 7, class: _, preferred-register: '' }
  - { id: 8, class: _, preferred-register: '' }
  - { id: 9, class: _, preferred-register: '' }
  - { id: 10, class: gprb, preferred-register: '' }
  - { id: 11, class: _, preferred-register: '' }
  - { id: 12, class: _, preferred-register: '' }
  - { id: 13, class: gprb, preferred-register: '' }
  - { id: 14, class: gprb, preferred-register: '' }
  - { id: 15, class: gprb, preferred-register: '' }
  - { id: 16, class: _, preferred-register: '' }
  - { id: 17, class: _, preferred-register: '' }
  - { id: 18, class: gpr, preferred-register: '' }
  - { id: 19, class: gpr, preferred-register: '' }
  - { id: 20, class: gpr, preferred-register: '' }
  - { id: 21, class: gprb, preferred-register: '' }
  - { id: 22, class: gprb, preferred-register: '' }
  - { id: 23, class: gpr, preferred-register: '' }
  - { id: 24, class: gprb, preferred-register: '' }
  - { id: 25, class: gprb, preferred-register: '' }
  - { id: 26, class: gprb, preferred-register: '' }
  - { id: 27, class: _, preferred-register: '' }
  - { id: 28, class: _, preferred-register: '' }
  - { id: 29, class: _, preferred-register: '' }
  - { id: 30, class: gprb, preferred-register: '' }
  - { id: 31, class: gprb, preferred-register: '' }
  - { id: 32, class: _, preferred-register: '' }
  - { id: 33, class: _, preferred-register: '' }
  - { id: 34, class: _, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
  - { reg: '$a3', virtual-reg: '' }
  - { reg: '$a4', virtual-reg: '' }
  - { reg: '$a5', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.1.entry:
    liveins: $a2, $a3, $a4, $a5

    ; CHECK-LABEL: name: shl_i64
    ; CHECK: liveins: $a2, $a3, $a4, $a5
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:gpr = COPY $a4
    ; CHECK-NEXT: [[MOVI:%[0-9]+]]:gpr = MOVI 32
    ; CHECK-NEXT: [[ADDI:%[0-9]+]]:gpr = ADDI [[COPY2]], -32
    ; CHECK-NEXT: [[SUB:%[0-9]+]]:gpr = SUB [[MOVI]], [[COPY2]]
    ; CHECK-NEXT: [[MOVI1:%[0-9]+]]:gpr = MOVI 0
    ; CHECK-NEXT: [[MOVI2:%[0-9]+]]:gpr = MOVI 1
    ; CHECK-NEXT: [[SELECT_LTUI:%[0-9]+]]:gpr = SELECT_LTUI [[COPY2]], 32, [[MOVI2]], [[MOVI1]]
    ; CHECK-NEXT: SSL [[COPY2]], implicit-def $sar
    ; CHECK-NEXT: [[SLL:%[0-9]+]]:gpr = SLL [[COPY]], implicit $sar
    ; CHECK-NEXT: SSR [[SUB]], implicit-def $sar
    ; CHECK-NEXT: [[SRL:%[0-9]+]]:gpr = SRL [[COPY]], implicit $sar
    ; CHECK-NEXT: SSL [[COPY2]], implicit-def $sar
    ; CHECK-NEXT: [[SLL1:%[0-9]+]]:gpr = SLL [[COPY1]], implicit $sar
    ; CHECK-NEXT: [[OR:%[0-9]+]]:gpr = OR [[SRL]], [[SLL1]]
    ; CHECK-NEXT: [[MOVI3:%[0-9]+]]:gpr = MOVI 0
    ; CHECK-NEXT: SSL [[ADDI]], implicit-def $sar
    ; CHECK-NEXT: [[SLL2:%[0-9]+]]:gpr = SLL [[COPY]], implicit $sar
    ; CHECK-NEXT: [[MOVEQZ:%[0-9]+]]:gpr = MOVEQZ [[SLL]], [[MOVI3]], [[SELECT_LTUI]]
    ; CHECK-NEXT: [[MOVEQZ1:%[0-9]+]]:gpr = MOVEQZ [[OR]], [[SLL2]], [[SELECT_LTUI]]
    ; CHECK-NEXT: [[MOVEQZ2:%[0-9]+]]:gpr = MOVEQZ [[MOVEQZ1]], [[COPY1]], [[COPY2]]
    ; CHECK-NEXT: $a2 = COPY [[MOVEQZ]]
    ; CHECK-NEXT: $a3 = COPY [[MOVEQZ2]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2, implicit $a3
    ; LX7-LABEL: name: shl_i64
    ; LX7: liveins: $a2, $a3, $a4, $a5
    ; LX7-NEXT: {{  $}}
    ; LX7-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; LX7-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; LX7-NEXT: [[COPY2:%[0-9]+]]:gpr = COPY $a4
    ; LX7-NEXT: [[MOVI:%[0-9]+]]:gpr = MOVI 32
    ; LX7-NEXT: [[ADDI:%[0-9]+]]:gpr = ADDI [[COPY2]], -32
    ; LX7-NEXT: [[SUB:%[0-9]+]]:gpr = SUB [[MOVI]], [[COPY2]]
    ; LX7-NEXT: [[SALTU:%[0-9]+]]:gpr = SALTU [[COPY2]], [[MOVI]]
    ; LX7-NEXT: SSL [[COPY2]], implicit-def $sar
    ; LX7-NEXT: [[SLL:%[0-9]+]]:gpr = SLL [[COPY]], implicit $sar
    ; LX7-NEXT: SSR [[SUB]], implicit-def $sar
    ; LX7-NEXT: [[SRL:%[0-9]+]]:gpr = SRL [[COPY]], implicit $sar
    ; LX7-NEXT: SSL [[COPY2]], implicit-def $sar
    ; LX7-NEXT: [[SLL1:%[0-9]+]]:gpr = SLL [[COPY1]], implicit $sar
    ; LX7-NEXT: [[OR:%[0-9]+]]:gpr = OR [[SRL]], [[SLL1]]
    ; LX7-NEXT: [[MOVI1:%[0-9]+]]:gpr = MOVI 0
    ; LX7-NEXT: SSL [[ADDI]], implicit-def $sar
    ; LX7-NEXT: [[SLL2:%[0-9]+]]:gpr = SLL [[COPY]], implicit $sar
    ; LX7-NEXT: [[MOVEQZ:%[0-9]+]]:gpr = MOVEQZ [[SLL]], [[MOVI1]], [[SALTU]]
    ; LX7-NEXT: [[MOVEQZ1:%[0-9]+]]:gpr = MOVEQZ [[OR]], [[SLL2]], [[SALTU]]
    ; LX7-NEXT: [[MOVEQZ2:%[0-9]+]]:gpr = MOVEQZ [[MOVEQZ1]], [[COPY1]], [[COPY2]]
    ; LX7-NEXT: $a2 = COPY [[MOVEQZ]]
    ; LX7-NEXT: $a3 = COPY [[MOVEQZ2]]
    ; LX7-NEXT: RETN implicit $a0, implicit $a2, implicit $a3
    %2:gpr(s32) = COPY $a2
    %3:gpr(s32) = COPY $a3
    %4:gprb(s32) = COPY $a4
    %10:gprb(s32) = G_CONSTANT i32 32
    %13:gprb(s32) = G_SUB %4, %10
    %14:gprb(s32) = G_SUB %10, %4
    %15:gprb(s32) = G_CONSTANT i32 0
    %31:gprb(s32) = G_ICMP intpred(ult), %4(s32), %10
    %30:gprb(s32) = G_ICMP intpred(eq), %4(s32), %15
    G_XTENSA_SSL_INRANGE %4(s32), implicit-def $sar
    %18:gpr(s32) = SLL %2(s32), implicit $sar
    G_XTENSA_SSR_INRANGE %14(s32), implicit-def $sar
    %19:gpr(s32) = SRL %2(s32), implicit $sar
    G_XTENSA_SSL_INRANGE %4(s32), implicit-def $sar
    %20:gpr(s32) = SLL %3(s32), implicit $sar
    %21:gprb(s32) = G_OR %19, %20
    %22:gprb(s32) = G_CONSTANT i32 0
    G_XTENSA_SSL_INRANGE %13(s32), implicit-def $sar
    %23:gpr(s32) = SLL %2(s32), implicit $sar
    %24:gprb(s32) = G_SELECT %31(s32), %18, %22
    %25:gprb(s32) = G_SELECT %31(s32), %21, %23
    %26:gprb(s32) = G_SELECT %30(s32), %3, %25
    $a2 = COPY %24(s32)
    $a3 = COPY %26(s32)
    RETN implicit $a0, implicit $a2, implicit $a3

...
---
name:            lshr_i33
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: _, preferred-register: '' }
  - { id: 2, class: gpr, preferred-register: '' }
  - { id: 3, class: gprb, preferred-register: '' }
  - { id: 4, class: _, preferred-register: '' }
  - { id: 5, class: gprb, preferred-register: '' }
  - { id: 6, class: _, preferred-register: '' }
  - { id: 7, class: _, preferred-register: '' }
  - { id: 8, class: _, preferred-register: '' }
  - { id: 9, class: _, preferred-register: '' }
  - { id: 10, class: _, preferred-register: '' }
  - { id: 11, class: _, preferred-register: '' }
  - { id: 12, class: _, preferred-register: '' }
  - { id: 13, class: _, preferred-register: '' }
  - { id: 14, class: _, preferred-register: '' }
  - { id: 15, class: gprb, preferred-register: '' }
  - { id: 16, class: _, preferred-register: '' }
  - { id: 17, class: _, preferred-register: '' }
  - { id: 18, class: gprb, preferred-register: '' }
  - { id: 19, class: gprb, preferred-register: '' }
  - { id: 20, class: gprb, preferred-register: '' }
  - { id: 21, class: _, preferred-register: '' }
  - { id: 22, class: _, preferred-register: '' }
  - { id: 23, class: gpr, preferred-register: '' }
  - { id: 24, class: gpr, preferred-register: '' }
  - { id: 25, class: gpr, preferred-register: '' }
  - { id: 26, class: gprb, preferred-register: '' }
  - { id: 27, class: gprb, preferred-register: '' }
  - { id: 28, class: gpr, preferred-register: '' }
  - { id: 29, class: gprb, preferred-register: '' }
  - { id: 30, class: gprb, preferred-register: '' }
  - { id: 31, class: gprb, preferred-register: '' }
  - { id: 32, class: _, preferred-register: '' }
  - { id: 33, class: _, preferred-register: '' }
  - { id: 34, class: _, preferred-register: '' }
  - { id: 35, class: gprb, preferred-register: '' }
  - { id: 36, class: gprb, preferred-register: '' }
  - { id: 37, class: _, preferred-register: '' }
  - { id: 38, class: _, preferred-register: '' }
  - { id: 39, class: _, preferred-register: '' }
  - { id: 40, class: _, preferred-register: '' }
  - { id: 41, class: _, preferred-register: '' }
  - { id: 42, class: _, preferred-register: '' }
  - { id: 43, class: _, preferred-register: '' }
  - { id: 44, class: _, preferred-register: '' }
  - { id: 45, class: _, preferred-register: '' }
  - { id: 46, class: gpr, preferred-register: '' }
  - { id: 47, class: _, preferred-register: '' }
  - { id: 48, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
  - { reg: '$a3', virtual-reg: '' }
  - { reg: '$a4', virtual-reg: '' }
  - { reg: '$a5', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.1.entry:
    liveins: $a2, $a3, $a4, $a5

    ; CHECK-LABEL: name: lshr_i33
    ; CHECK: liveins: $a2, $a3, $a4, $a5
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:gpr = COPY $a4
    ; CHECK-NEXT: [[EXTUI:%[0-9]+]]:gpr = EXTUI [[COPY1]], 0, 1
    ; CHECK-NEXT: [[MOVI:%[0-9]+]]:gpr = MOVI 32
    ; CHECK-NEXT: [[ADDI:%[0-9]+]]:gpr = ADDI [[COPY2]], -32
    ; CHECK-NEXT: [[SUB:%[0-9]+]]:gpr = SUB [[MOVI]], [[COPY2]]
    ; CHECK-NEXT: [[MOVI1:%[0-9]+]]:gpr = MOVI 0
    ; CHECK-NEXT: [[MOVI2:%[0-9]+]]:gpr = MOVI 1
    ; CHECK-NEXT: [[SELECT_LTUI:%[0-9]+]]:gpr = SELECT_LTUI [[COPY2]], 32, [[MOVI2]], [[MOVI1]]
    ; CHECK-NEXT: SSR [[COPY2]], implicit-def $sar
    ; CHECK-NEXT: [[SRL:%[0-9]+]]:gpr = SRL [[EXTUI]], implicit $sar
    ; CHECK-NEXT: SSR [[COPY2]], implicit-def $sar
    ; CHECK-NEXT: [[SRL1:%[0-9]+]]:gpr = SRL [[COPY]], implicit $sar
    ; CHECK-NEXT: SSL [[SUB]], implicit-def $sar
    ; CHECK-NEXT: [[SLL:%[0-9]+]]:gpr = SLL [[EXTUI]], implicit $sar
    ; CHECK-NEXT: [[OR:%[0-9]+]]:gpr = OR [[SRL1]], [[SLL]]
    ; CHECK-NEXT: [[MOVI3:%[0-9]+]]:gpr = MOVI 0
    ; CHECK-NEXT: SSR [[ADDI]], implicit-def $sar
    ; CHECK-NEXT: [[SRL2:%[0-9]+]]:gpr = SRL [[EXTUI]], implicit $sar
    ; CHECK-NEXT: [[MOVEQZ:%[0-9]+]]:gpr = MOVEQZ [[OR]], [[SRL2]], [[SELECT_LTUI]]
    ; CHECK-NEXT: [[MOVEQZ1:%[0-9]+]]:gpr = MOVEQZ [[MOVEQZ]], [[COPY]], [[COPY2]]
    ; CHECK-NEXT: [[MOVEQZ2:%[0-9]+]]:gpr = MOVEQZ [[SRL]], [[MOVI3]], [[SELECT_LTUI]]
    ; CHECK-NEXT: $a2 = COPY [[MOVEQZ1]]
    ; CHECK-NEXT: $a3 = COPY [[MOVEQZ2]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2, implicit $a3
    ; LX7-LABEL: name: lshr_i33
    ; LX7: liveins: $a2, $a3, $a4, $a5
    ; LX7-NEXT: {{  $}}
    ; LX7-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; LX7-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; LX7-NEXT: [[COPY2:%[0-9]+]]:gpr = COPY $a4
    ; LX7-NEXT: [[EXTUI:%[0-9]+]]:gpr = EXTUI [[COPY1]], 0, 1
    ; LX7-NEXT: [[MOVI:%[0-9]+]]:gpr = MOVI 32
    ; LX7-NEXT: [[ADDI:%[0-9]+]]:gpr = ADDI [[COPY2]], -32
    ; LX7-NEXT: [[SUB:%[0-9]+]]:gpr = SUB [[MOVI]], [[COPY2]]
    ; LX7-NEXT: [[SALTU:%[0-9]+]]:gpr = SALTU [[COPY2]], [[MOVI]]
    ; LX7-NEXT: SSR [[COPY2]], implicit-def $sar
    ; LX7-NEXT: [[SRL:%[0-9]+]]:gpr = SRL [[EXTUI]], implicit $sar
    ; LX7-NEXT: SSR [[COPY2]], implicit-def $sar
    ; LX7-NEXT: [[SRL1:%[0-9]+]]:gpr = SRL [[COPY]], implicit $sar
    ; LX7-NEXT: SSL [[SUB]], implicit-def $sar
    ; LX7-NEXT: [[SLL:%[0-9]+]]:gpr = SLL [[EXTUI]], implicit $sar
    ; LX7-NEXT: [[OR:%[0-9]+]]:gpr = OR [[SRL1]], [[SLL]]
    ; LX7-NEXT: [[MOVI1:%[0-9]+]]:gpr = MOVI 0
    ; LX7-NEXT: SSR [[ADDI]], implicit-def $sar
    ; LX7-NEXT: [[SRL2:%[0-9]+]]:gpr = SRL [[EXTUI]], implicit $sar
    ; LX7-NEXT: [[MOVEQZ:%[0-9]+]]:gpr = MOVEQZ [[OR]], [[SRL2]], [[SALTU]]
    ; LX7-NEXT: [[MOVEQZ1:%[0-9]+]]:gpr = MOVEQZ [[MOVEQZ]], [[COPY]], [[COPY2]]
    ; LX7-NEXT: [[MOVEQZ2:%[0-9]+]]:gpr = MOVEQZ [[SRL]], [[MOVI1]], [[SALTU]]
    ; LX7-NEXT: $a2 = COPY [[MOVEQZ1]]
    ; LX7-NEXT: $a3 = COPY [[MOVEQZ2]]
    ; LX7-NEXT: RETN implicit $a0, implicit $a2, implicit $a3
    %2:gpr(s32) = COPY $a2
    %3:gprb(s32) = COPY $a3
    %5:gprb(s32) = COPY $a4
    %48:gprb(s32) = G_CONSTANT i32 1
    %46:gpr(s32) = G_AND %3, %48
    %15:gprb(s32) = G_CONSTANT i32 32
    %18:gprb(s32) = G_SUB %5, %15
    %19:gprb(s32) = G_SUB %15, %5
    %20:gprb(s32) = G_CONSTANT i32 0
    %36:gprb(s32) = G_ICMP intpred(ult), %5(s32), %15
    %35:gprb(s32) = G_ICMP intpred(eq), %5(s32), %20
    G_XTENSA_SSR_INRANGE %5(s32), implicit-def $sar
    %23:gpr(s32) = SRL %46(s32), implicit $sar
    G_XTENSA_SSR_INRANGE %5(s32), implicit-def $sar
    %24:gpr(s32) = SRL %2(s32), implicit $sar
    G_XTENSA_SSL_INRANGE %19(s32), implicit-def $sar
    %25:gpr(s32) = SLL %46(s32), implicit $sar
    %26:gprb(s32) = G_OR %24, %25
    %27:gprb(s32) = G_CONSTANT i32 0
    G_XTENSA_SSR_INRANGE %18(s32), implicit-def $sar
    %28:gpr(s32) = SRL %46(s32), implicit $sar
    %29:gprb(s32) = G_SELECT %36(s32), %26, %28
    %30:gprb(s32) = G_SELECT %35(s32), %2, %29
    %31:gprb(s32) = G_SELECT %36(s32), %23, %27
    $a2 = COPY %30(s32)
    $a3 = COPY %31(s32)
    RETN implicit $a0, implicit $a2, implicit $a3

...
---
name:            lshr_i64
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: _, preferred-register: '' }
  - { id: 2, class: gpr, preferred-register: '' }
  - { id: 3, class: gpr, preferred-register: '' }
  - { id: 4, class: gprb, preferred-register: '' }
  - { id: 5, class: _, preferred-register: '' }
  - { id: 6, class: _, preferred-register: '' }
  - { id: 7, class: _, preferred-register: '' }
  - { id: 8, class: _, preferred-register: '' }
  - { id: 9, class: _, preferred-register: '' }
  - { id: 10, class: gprb, preferred-register: '' }
  - { id: 11, class: _, preferred-register: '' }
  - { id: 12, class: _, preferred-register: '' }
  - { id: 13, class: gprb, preferred-register: '' }
  - { id: 14, class: gprb, preferred-register: '' }
  - { id: 15, class: gprb, preferred-register: '' }
  - { id: 16, class: _, preferred-register: '' }
  - { id: 17, class: _, preferred-register: '' }
  - { id: 18, class: gpr, preferred-register: '' }
  - { id: 19, class: gpr, preferred-register: '' }
  - { id: 20, class: gpr, preferred-register: '' }
  - { id: 21, class: gprb, preferred-register: '' }
  - { id: 22, class: gprb, preferred-register: '' }
  - { id: 23, class: gpr, preferred-register: '' }
  - { id: 24, class: gprb, preferred-register: '' }
  - { id: 25, class: gprb, preferred-register: '' }
  - { id: 26, class: gprb, preferred-register: '' }
  - { id: 27, class: _, preferred-register: '' }
  - { id: 28, class: _, preferred-register: '' }
  - { id: 29, class: _, preferred-register: '' }
  - { id: 30, class: gprb, preferred-register: '' }
  - { id: 31, class: gprb, preferred-register: '' }
  - { id: 32, class: _, preferred-register: '' }
  - { id: 33, class: _, preferred-register: '' }
  - { id: 34, class: _, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
  - { reg: '$a3', virtual-reg: '' }
  - { reg: '$a4', virtual-reg: '' }
  - { reg: '$a5', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.1.entry:
    liveins: $a2, $a3, $a4, $a5

    ; CHECK-LABEL: name: lshr_i64
    ; CHECK: liveins: $a2, $a3, $a4, $a5
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:gpr = COPY $a4
    ; CHECK-NEXT: [[MOVI:%[0-9]+]]:gpr = MOVI 32
    ; CHECK-NEXT: [[ADDI:%[0-9]+]]:gpr = ADDI [[COPY2]], -32
    ; CHECK-NEXT: [[SUB:%[0-9]+]]:gpr = SUB [[MOVI]], [[COPY2]]
    ; CHECK-NEXT: [[MOVI1:%[0-9]+]]:gpr = MOVI 0
    ; CHECK-NEXT: [[MOVI2:%[0-9]+]]:gpr = MOVI 1
    ; CHECK-NEXT: [[SELECT_LTUI:%[0-9]+]]:gpr = SELECT_LTUI [[COPY2]], 32, [[MOVI2]], [[MOVI1]]
    ; CHECK-NEXT: SSR [[COPY2]], implicit-def $sar
    ; CHECK-NEXT: [[SRL:%[0-9]+]]:gpr = SRL [[COPY1]], implicit $sar
    ; CHECK-NEXT: SSR [[COPY2]], implicit-def $sar
    ; CHECK-NEXT: [[SRL1:%[0-9]+]]:gpr = SRL [[COPY]], implicit $sar
    ; CHECK-NEXT: SSL [[SUB]], implicit-def $sar
    ; CHECK-NEXT: [[SLL:%[0-9]+]]:gpr = SLL [[COPY1]], implicit $sar
    ; CHECK-NEXT: [[OR:%[0-9]+]]:gpr = OR [[SRL1]], [[SLL]]
    ; CHECK-NEXT: [[MOVI3:%[0-9]+]]:gpr = MOVI 0
    ; CHECK-NEXT: SSR [[ADDI]], implicit-def $sar
    ; CHECK-NEXT: [[SRL2:%[0-9]+]]:gpr = SRL [[COPY1]], implicit $sar
    ; CHECK-NEXT: [[MOVEQZ:%[0-9]+]]:gpr = MOVEQZ [[OR]], [[SRL2]], [[SELECT_LTUI]]
    ; CHECK-NEXT: [[MOVEQZ1:%[0-9]+]]:gpr = MOVEQZ [[MOVEQZ]], [[COPY]], [[COPY2]]
    ; CHECK-NEXT: [[MOVEQZ2:%[0-9]+]]:gpr = MOVEQZ [[SRL]], [[MOVI3]], [[SELECT_LTUI]]
    ; CHECK-NEXT: $a2 = COPY [[MOVEQZ1]]
    ; CHECK-NEXT: $a3 = COPY [[MOVEQZ2]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2, implicit $a3
    ; LX7-LABEL: name: lshr_i64
    ; LX7: liveins: $a2, $a3, $a4, $a5
    ; LX7-NEXT: {{  $}}
    ; LX7-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; LX7-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; LX7-NEXT: [[COPY2:%[0-9]+]]:gpr = COPY $a4
    ; LX7-NEXT: [[MOVI:%[0-9]+]]:gpr = MOVI 32
    ; LX7-NEXT: [[ADDI:%[0-9]+]]:gpr = ADDI [[COPY2]], -32
    ; LX7-NEXT: [[SUB:%[0-9]+]]:gpr = SUB [[MOVI]], [[COPY2]]
    ; LX7-NEXT: [[SALTU:%[0-9]+]]:gpr = SALTU [[COPY2]], [[MOVI]]
    ; LX7-NEXT: SSR [[COPY2]], implicit-def $sar
    ; LX7-NEXT: [[SRL:%[0-9]+]]:gpr = SRL [[COPY1]], implicit $sar
    ; LX7-NEXT: SSR [[COPY2]], implicit-def $sar
    ; LX7-NEXT: [[SRL1:%[0-9]+]]:gpr = SRL [[COPY]], implicit $sar
    ; LX7-NEXT: SSL [[SUB]], implicit-def $sar
    ; LX7-NEXT: [[SLL:%[0-9]+]]:gpr = SLL [[COPY1]], implicit $sar
    ; LX7-NEXT: [[OR:%[0-9]+]]:gpr = OR [[SRL1]], [[SLL]]
    ; LX7-NEXT: [[MOVI1:%[0-9]+]]:gpr = MOVI 0
    ; LX7-NEXT: SSR [[ADDI]], implicit-def $sar
    ; LX7-NEXT: [[SRL2:%[0-9]+]]:gpr = SRL [[COPY1]], implicit $sar
    ; LX7-NEXT: [[MOVEQZ:%[0-9]+]]:gpr = MOVEQZ [[OR]], [[SRL2]], [[SALTU]]
    ; LX7-NEXT: [[MOVEQZ1:%[0-9]+]]:gpr = MOVEQZ [[MOVEQZ]], [[COPY]], [[COPY2]]
    ; LX7-NEXT: [[MOVEQZ2:%[0-9]+]]:gpr = MOVEQZ [[SRL]], [[MOVI1]], [[SALTU]]
    ; LX7-NEXT: $a2 = COPY [[MOVEQZ1]]
    ; LX7-NEXT: $a3 = COPY [[MOVEQZ2]]
    ; LX7-NEXT: RETN implicit $a0, implicit $a2, implicit $a3
    %2:gpr(s32) = COPY $a2
    %3:gpr(s32) = COPY $a3
    %4:gprb(s32) = COPY $a4
    %10:gprb(s32) = G_CONSTANT i32 32
    %13:gprb(s32) = G_SUB %4, %10
    %14:gprb(s32) = G_SUB %10, %4
    %15:gprb(s32) = G_CONSTANT i32 0
    %31:gprb(s32) = G_ICMP intpred(ult), %4(s32), %10
    %30:gprb(s32) = G_ICMP intpred(eq), %4(s32), %15
    G_XTENSA_SSR_INRANGE %4(s32), implicit-def $sar
    %18:gpr(s32) = SRL %3(s32), implicit $sar
    G_XTENSA_SSR_INRANGE %4(s32), implicit-def $sar
    %19:gpr(s32) = SRL %2(s32), implicit $sar
    G_XTENSA_SSL_INRANGE %14(s32), implicit-def $sar
    %20:gpr(s32) = SLL %3(s32), implicit $sar
    %21:gprb(s32) = G_OR %19, %20
    %22:gprb(s32) = G_CONSTANT i32 0
    G_XTENSA_SSR_INRANGE %13(s32), implicit-def $sar
    %23:gpr(s32) = SRL %3(s32), implicit $sar
    %24:gprb(s32) = G_SELECT %31(s32), %21, %23
    %25:gprb(s32) = G_SELECT %30(s32), %2, %24
    %26:gprb(s32) = G_SELECT %31(s32), %18, %22
    $a2 = COPY %25(s32)
    $a3 = COPY %26(s32)
    RETN implicit $a0, implicit $a2, implicit $a3

...
---
name:            ashr_i33
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: _, preferred-register: '' }
  - { id: 2, class: gprb, preferred-register: '' }
  - { id: 3, class: gprb, preferred-register: '' }
  - { id: 4, class: _, preferred-register: '' }
  - { id: 5, class: gprb, preferred-register: '' }
  - { id: 6, class: _, preferred-register: '' }
  - { id: 7, class: _, preferred-register: '' }
  - { id: 8, class: _, preferred-register: '' }
  - { id: 9, class: _, preferred-register: '' }
  - { id: 10, class: _, preferred-register: '' }
  - { id: 11, class: _, preferred-register: '' }
  - { id: 12, class: _, preferred-register: '' }
  - { id: 13, class: _, preferred-register: '' }
  - { id: 14, class: _, preferred-register: '' }
  - { id: 15, class: gprb, preferred-register: '' }
  - { id: 16, class: _, preferred-register: '' }
  - { id: 17, class: _, preferred-register: '' }
  - { id: 18, class: gprb, preferred-register: '' }
  - { id: 19, class: gprb, preferred-register: '' }
  - { id: 20, class: gprb, preferred-register: '' }
  - { id: 21, class: _, preferred-register: '' }
  - { id: 22, class: _, preferred-register: '' }
  - { id: 23, class: gpr, preferred-register: '' }
  - { id: 24, class: gpr, preferred-register: '' }
  - { id: 25, class: gpr, preferred-register: '' }
  - { id: 26, class: gprb, preferred-register: '' }
  - { id: 27, class: _, preferred-register: '' }
  - { id: 28, class: gprb, preferred-register: '' }
  - { id: 29, class: gpr, preferred-register: '' }
  - { id: 30, class: gprb, preferred-register: '' }
  - { id: 31, class: gprb, preferred-register: '' }
  - { id: 32, class: gprb, preferred-register: '' }
  - { id: 33, class: _, preferred-register: '' }
  - { id: 34, class: _, preferred-register: '' }
  - { id: 35, class: _, preferred-register: '' }
  - { id: 36, class: gprb, preferred-register: '' }
  - { id: 37, class: gprb, preferred-register: '' }
  - { id: 38, class: _, preferred-register: '' }
  - { id: 39, class: _, preferred-register: '' }
  - { id: 40, class: _, preferred-register: '' }
  - { id: 41, class: _, preferred-register: '' }
  - { id: 42, class: _, preferred-register: '' }
  - { id: 43, class: _, preferred-register: '' }
  - { id: 44, class: _, preferred-register: '' }
  - { id: 45, class: _, preferred-register: '' }
  - { id: 46, class: gprb, preferred-register: '' }
  - { id: 47, class: gprb, preferred-register: '' }
  - { id: 48, class: gprb, preferred-register: '' }
  - { id: 49, class: gprb, preferred-register: '' }
  - { id: 50, class: gpr, preferred-register: '' }
  - { id: 51, class: gpr, preferred-register: '' }
  - { id: 52, class: _, preferred-register: '' }
  - { id: 53, class: _, preferred-register: '' }
  - { id: 54, class: _, preferred-register: '' }
  - { id: 55, class: gprb, preferred-register: '' }
  - { id: 56, class: gprb, preferred-register: '' }
  - { id: 57, class: gprb, preferred-register: '' }
  - { id: 58, class: gprb, preferred-register: '' }
  - { id: 59, class: gprb, preferred-register: '' }
  - { id: 60, class: gprb, preferred-register: '' }
  - { id: 61, class: gprb, preferred-register: '' }
  - { id: 62, class: _, preferred-register: '' }
  - { id: 63, class: _, preferred-register: '' }
  - { id: 64, class: gprb, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
  - { reg: '$a3', virtual-reg: '' }
  - { reg: '$a4', virtual-reg: '' }
  - { reg: '$a5', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.1.entry:
    liveins: $a2, $a3, $a4, $a5

    ; CHECK-LABEL: name: ashr_i33
    ; CHECK: liveins: $a2, $a3, $a4, $a5
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:gpr = COPY $a4
    ; CHECK-NEXT: [[SLLI:%[0-9]+]]:gpr = SLLI [[COPY]], 31
    ; CHECK-NEXT: [[SLLI1:%[0-9]+]]:gpr = SLLI [[COPY1]], 31
    ; CHECK-NEXT: [[SRLI:%[0-9]+]]:gpr = SRLI [[COPY]], 1
    ; CHECK-NEXT: [[OR:%[0-9]+]]:gpr = OR [[SLLI1]], [[SRLI]]
    ; CHECK-NEXT: [[EXTUI:%[0-9]+]]:gpr = EXTUI [[SLLI]], 31, 1
    ; CHECK-NEXT: [[SLLI2:%[0-9]+]]:gpr = SLLI [[OR]], 1
    ; CHECK-NEXT: [[OR1:%[0-9]+]]:gpr = OR [[EXTUI]], [[SLLI2]]
    ; CHECK-NEXT: [[SRAI:%[0-9]+]]:gpr = SRAI [[OR]], 31
    ; CHECK-NEXT: [[MOVI:%[0-9]+]]:gpr = MOVI 32
    ; CHECK-NEXT: [[ADDI:%[0-9]+]]:gpr = ADDI [[COPY2]], -32
    ; CHECK-NEXT: [[SUB:%[0-9]+]]:gpr = SUB [[MOVI]], [[COPY2]]
    ; CHECK-NEXT: [[MOVI1:%[0-9]+]]:gpr = MOVI 0
    ; CHECK-NEXT: [[MOVI2:%[0-9]+]]:gpr = MOVI 1
    ; CHECK-NEXT: [[SELECT_LTUI:%[0-9]+]]:gpr = SELECT_LTUI [[COPY2]], 32, [[MOVI2]], [[MOVI1]]
    ; CHECK-NEXT: SSR [[COPY2]], implicit-def $sar
    ; CHECK-NEXT: [[SRA:%[0-9]+]]:gpr = SRA [[SRAI]], implicit $sar
    ; CHECK-NEXT: SSR [[COPY2]], implicit-def $sar
    ; CHECK-NEXT: [[SRL:%[0-9]+]]:gpr = SRL [[OR1]], implicit $sar
    ; CHECK-NEXT: SSL [[SUB]], implicit-def $sar
    ; CHECK-NEXT: [[SLL:%[0-9]+]]:gpr = SLL [[SRAI]], implicit $sar
    ; CHECK-NEXT: [[OR2:%[0-9]+]]:gpr = OR [[SRL]], [[SLL]]
    ; CHECK-NEXT: [[SRAI1:%[0-9]+]]:gpr = SRAI [[OR]], 31
    ; CHECK-NEXT: SSR [[ADDI]], implicit-def $sar
    ; CHECK-NEXT: [[SRA1:%[0-9]+]]:gpr = SRA [[SRAI]], implicit $sar
    ; CHECK-NEXT: [[MOVEQZ:%[0-9]+]]:gpr = MOVEQZ [[OR2]], [[SRA1]], [[SELECT_LTUI]]
    ; CHECK-NEXT: [[MOVEQZ1:%[0-9]+]]:gpr = MOVEQZ [[MOVEQZ]], [[OR1]], [[COPY2]]
    ; CHECK-NEXT: [[MOVEQZ2:%[0-9]+]]:gpr = MOVEQZ [[SRA]], [[SRAI1]], [[SELECT_LTUI]]
    ; CHECK-NEXT: $a2 = COPY [[MOVEQZ1]]
    ; CHECK-NEXT: $a3 = COPY [[MOVEQZ2]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2, implicit $a3
    ; LX7-LABEL: name: ashr_i33
    ; LX7: liveins: $a2, $a3, $a4, $a5
    ; LX7-NEXT: {{  $}}
    ; LX7-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; LX7-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; LX7-NEXT: [[COPY2:%[0-9]+]]:gpr = COPY $a4
    ; LX7-NEXT: [[SLLI:%[0-9]+]]:gpr = SLLI [[COPY]], 31
    ; LX7-NEXT: [[SLLI1:%[0-9]+]]:gpr = SLLI [[COPY1]], 31
    ; LX7-NEXT: [[SRLI:%[0-9]+]]:gpr = SRLI [[COPY]], 1
    ; LX7-NEXT: [[OR:%[0-9]+]]:gpr = OR [[SLLI1]], [[SRLI]]
    ; LX7-NEXT: [[EXTUI:%[0-9]+]]:gpr = EXTUI [[SLLI]], 31, 1
    ; LX7-NEXT: [[SLLI2:%[0-9]+]]:gpr = SLLI [[OR]], 1
    ; LX7-NEXT: [[OR1:%[0-9]+]]:gpr = OR [[EXTUI]], [[SLLI2]]
    ; LX7-NEXT: [[SRAI:%[0-9]+]]:gpr = SRAI [[OR]], 31
    ; LX7-NEXT: [[MOVI:%[0-9]+]]:gpr = MOVI 32
    ; LX7-NEXT: [[ADDI:%[0-9]+]]:gpr = ADDI [[COPY2]], -32
    ; LX7-NEXT: [[SUB:%[0-9]+]]:gpr = SUB [[MOVI]], [[COPY2]]
    ; LX7-NEXT: [[SALTU:%[0-9]+]]:gpr = SALTU [[COPY2]], [[MOVI]]
    ; LX7-NEXT: SSR [[COPY2]], implicit-def $sar
    ; LX7-NEXT: [[SRA:%[0-9]+]]:gpr = SRA [[SRAI]], implicit $sar
    ; LX7-NEXT: SSR [[COPY2]], implicit-def $sar
    ; LX7-NEXT: [[SRL:%[0-9]+]]:gpr = SRL [[OR1]], implicit $sar
    ; LX7-NEXT: SSL [[SUB]], implicit-def $sar
    ; LX7-NEXT: [[SLL:%[0-9]+]]:gpr = SLL [[SRAI]], implicit $sar
    ; LX7-NEXT: [[OR2:%[0-9]+]]:gpr = OR [[SRL]], [[SLL]]
    ; LX7-NEXT: [[SRAI1:%[0-9]+]]:gpr = SRAI [[OR]], 31
    ; LX7-NEXT: SSR [[ADDI]], implicit-def $sar
    ; LX7-NEXT: [[SRA1:%[0-9]+]]:gpr = SRA [[SRAI]], implicit $sar
    ; LX7-NEXT: [[MOVEQZ:%[0-9]+]]:gpr = MOVEQZ [[OR2]], [[SRA1]], [[SALTU]]
    ; LX7-NEXT: [[MOVEQZ1:%[0-9]+]]:gpr = MOVEQZ [[MOVEQZ]], [[OR1]], [[COPY2]]
    ; LX7-NEXT: [[MOVEQZ2:%[0-9]+]]:gpr = MOVEQZ [[SRA]], [[SRAI1]], [[SALTU]]
    ; LX7-NEXT: $a2 = COPY [[MOVEQZ1]]
    ; LX7-NEXT: $a3 = COPY [[MOVEQZ2]]
    ; LX7-NEXT: RETN implicit $a0, implicit $a2, implicit $a3
    %2:gprb(s32) = COPY $a2
    %3:gprb(s32) = COPY $a3
    %5:gprb(s32) = COPY $a4
    %55:gprb(s32) = G_CONSTANT i32 31
    %56:gprb(s32) = G_SHL %2, %55(s32)
    %57:gprb(s32) = G_CONSTANT i32 31
    %58:gprb(s32) = G_SHL %3, %57(s32)
    %59:gprb(s32) = G_CONSTANT i32 1
    %60:gprb(s32) = G_LSHR %2, %59(s32)
    %61:gprb(s32) = G_OR %58, %60
    %46:gprb(s32) = G_CONSTANT i32 31
    %47:gprb(s32) = G_LSHR %56, %46(s32)
    %48:gprb(s32) = G_CONSTANT i32 1
    %49:gprb(s32) = G_SHL %61, %48(s32)
    %50:gpr(s32) = G_OR %47, %49
    %51:gpr(s32) = G_ASHR %61, %46(s32)
    %15:gprb(s32) = G_CONSTANT i32 32
    %18:gprb(s32) = G_SUB %5, %15
    %19:gprb(s32) = G_SUB %15, %5
    %20:gprb(s32) = G_CONSTANT i32 0
    %37:gprb(s32) = G_ICMP intpred(ult), %5(s32), %15
    %36:gprb(s32) = G_ICMP intpred(eq), %5(s32), %20
    G_XTENSA_SSR_INRANGE %5(s32), implicit-def $sar
    %23:gpr(s32) = SRA %51(s32), implicit $sar
    G_XTENSA_SSR_INRANGE %5(s32), implicit-def $sar
    %24:gpr(s32) = SRL %50(s32), implicit $sar
    G_XTENSA_SSL_INRANGE %19(s32), implicit-def $sar
    %25:gpr(s32) = SLL %51(s32), implicit $sar
    %26:gprb(s32) = G_OR %24, %25
    %64:gprb(s32) = G_CONSTANT i32 31
    %28:gprb(s32) = G_ASHR %61, %64(s32)
    G_XTENSA_SSR_INRANGE %18(s32), implicit-def $sar
    %29:gpr(s32) = SRA %51(s32), implicit $sar
    %30:gprb(s32) = G_SELECT %37(s32), %26, %29
    %31:gprb(s32) = G_SELECT %36(s32), %50, %30
    %32:gprb(s32) = G_SELECT %37(s32), %23, %28
    $a2 = COPY %31(s32)
    $a3 = COPY %32(s32)
    RETN implicit $a0, implicit $a2, implicit $a3

...
---
name:            ashr_i64
alignment:       4
exposesReturnsTwice: false
legalized:       true
regBankSelected: true
selected:        false
failedISel:      false
tracksRegLiveness: true
hasWinCFI:       false
callsEHReturn:   false
callsUnwindInit: false
hasEHCatchret:   false
hasEHScopes:     false
hasEHFunclets:   false
failsVerification: false
tracksDebugUserValues: false
registers:
  - { id: 0, class: _, preferred-register: '' }
  - { id: 1, class: _, preferred-register: '' }
  - { id: 2, class: gpr, preferred-register: '' }
  - { id: 3, class: gpr, preferred-register: '' }
  - { id: 4, class: gprb, preferred-register: '' }
  - { id: 5, class: _, preferred-register: '' }
  - { id: 6, class: _, preferred-register: '' }
  - { id: 7, class: _, preferred-register: '' }
  - { id: 8, class: _, preferred-register: '' }
  - { id: 9, class: _, preferred-register: '' }
  - { id: 10, class: gprb, preferred-register: '' }
  - { id: 11, class: _, preferred-register: '' }
  - { id: 12, class: _, preferred-register: '' }
  - { id: 13, class: gprb, preferred-register: '' }
  - { id: 14, class: gprb, preferred-register: '' }
  - { id: 15, class: gprb, preferred-register: '' }
  - { id: 16, class: _, preferred-register: '' }
  - { id: 17, class: _, preferred-register: '' }
  - { id: 18, class: gpr, preferred-register: '' }
  - { id: 19, class: gpr, preferred-register: '' }
  - { id: 20, class: gpr, preferred-register: '' }
  - { id: 21, class: gprb, preferred-register: '' }
  - { id: 22, class: gprb, preferred-register: '' }
  - { id: 23, class: gprb, preferred-register: '' }
  - { id: 24, class: gpr, preferred-register: '' }
  - { id: 25, class: gprb, preferred-register: '' }
  - { id: 26, class: gprb, preferred-register: '' }
  - { id: 27, class: gprb, preferred-register: '' }
  - { id: 28, class: _, preferred-register: '' }
  - { id: 29, class: _, preferred-register: '' }
  - { id: 30, class: _, preferred-register: '' }
  - { id: 31, class: gprb, preferred-register: '' }
  - { id: 32, class: gprb, preferred-register: '' }
  - { id: 33, class: _, preferred-register: '' }
  - { id: 34, class: _, preferred-register: '' }
  - { id: 35, class: _, preferred-register: '' }
liveins:
  - { reg: '$a2', virtual-reg: '' }
  - { reg: '$a3', virtual-reg: '' }
  - { reg: '$a4', virtual-reg: '' }
  - { reg: '$a5', virtual-reg: '' }
frameInfo:
  isFrameAddressTaken: false
  isReturnAddressTaken: false
  hasStackMap:     false
  hasPatchPoint:   false
  stackSize:       0
  offsetAdjustment: 0
  maxAlignment:    1
  adjustsStack:    false
  hasCalls:        false
  stackProtector:  ''
  functionContext: ''
  maxCallFrameSize: 4294967295
  cvBytesOfCalleeSavedRegisters: 0
  hasOpaqueSPAdjustment: false
  hasVAStart:      false
  hasMustTailInVarArgFunc: false
  hasTailCall:     false
  localFrameSize:  0
  savePoint:       ''
  restorePoint:    ''
fixedStack:      []
stack:           []
callSites:       []
debugValueSubstitutions: []
constants:       []
machineFunctionInfo: {}
body:             |
  bb.1.entry:
    liveins: $a2, $a3, $a4, $a5

    ; CHECK-LABEL: name: ashr_i64
    ; CHECK: liveins: $a2, $a3, $a4, $a5
    ; CHECK-NEXT: {{  $}}
    ; CHECK-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; CHECK-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; CHECK-NEXT: [[COPY2:%[0-9]+]]:gpr = COPY $a4
    ; CHECK-NEXT: [[MOVI:%[0-9]+]]:gpr = MOVI 32
    ; CHECK-NEXT: [[ADDI:%[0-9]+]]:gpr = ADDI [[COPY2]], -32
    ; CHECK-NEXT: [[SUB:%[0-9]+]]:gpr = SUB [[MOVI]], [[COPY2]]
    ; CHECK-NEXT: [[MOVI1:%[0-9]+]]:gpr = MOVI 0
    ; CHECK-NEXT: [[MOVI2:%[0-9]+]]:gpr = MOVI 1
    ; CHECK-NEXT: [[SELECT_LTUI:%[0-9]+]]:gpr = SELECT_LTUI [[COPY2]], 32, [[MOVI2]], [[MOVI1]]
    ; CHECK-NEXT: SSR [[COPY2]], implicit-def $sar
    ; CHECK-NEXT: [[SRA:%[0-9]+]]:gpr = SRA [[COPY1]], implicit $sar
    ; CHECK-NEXT: SSR [[COPY2]], implicit-def $sar
    ; CHECK-NEXT: [[SRL:%[0-9]+]]:gpr = SRL [[COPY]], implicit $sar
    ; CHECK-NEXT: SSL [[SUB]], implicit-def $sar
    ; CHECK-NEXT: [[SLL:%[0-9]+]]:gpr = SLL [[COPY1]], implicit $sar
    ; CHECK-NEXT: [[OR:%[0-9]+]]:gpr = OR [[SRL]], [[SLL]]
    ; CHECK-NEXT: [[SRAI:%[0-9]+]]:gpr = SRAI [[COPY1]], 31
    ; CHECK-NEXT: SSR [[ADDI]], implicit-def $sar
    ; CHECK-NEXT: [[SRA1:%[0-9]+]]:gpr = SRA [[COPY1]], implicit $sar
    ; CHECK-NEXT: [[MOVEQZ:%[0-9]+]]:gpr = MOVEQZ [[OR]], [[SRA1]], [[SELECT_LTUI]]
    ; CHECK-NEXT: [[MOVEQZ1:%[0-9]+]]:gpr = MOVEQZ [[MOVEQZ]], [[COPY]], [[COPY2]]
    ; CHECK-NEXT: [[MOVEQZ2:%[0-9]+]]:gpr = MOVEQZ [[SRA]], [[SRAI]], [[SELECT_LTUI]]
    ; CHECK-NEXT: $a2 = COPY [[MOVEQZ1]]
    ; CHECK-NEXT: $a3 = COPY [[MOVEQZ2]]
    ; CHECK-NEXT: RETN implicit $a0, implicit $a2, implicit $a3
    ; LX7-LABEL: name: ashr_i64
    ; LX7: liveins: $a2, $a3, $a4, $a5
    ; LX7-NEXT: {{  $}}
    ; LX7-NEXT: [[COPY:%[0-9]+]]:gpr = COPY $a2
    ; LX7-NEXT: [[COPY1:%[0-9]+]]:gpr = COPY $a3
    ; LX7-NEXT: [[COPY2:%[0-9]+]]:gpr = COPY $a4
    ; LX7-NEXT: [[MOVI:%[0-9]+]]:gpr = MOVI 32
    ; LX7-NEXT: [[ADDI:%[0-9]+]]:gpr = ADDI [[COPY2]], -32
    ; LX7-NEXT: [[SUB:%[0-9]+]]:gpr = SUB [[MOVI]], [[COPY2]]
    ; LX7-NEXT: [[SALTU:%[0-9]+]]:gpr = SALTU [[COPY2]], [[MOVI]]
    ; LX7-NEXT: SSR [[COPY2]], implicit-def $sar
    ; LX7-NEXT: [[SRA:%[0-9]+]]:gpr = SRA [[COPY1]], implicit $sar
    ; LX7-NEXT: SSR [[COPY2]], implicit-def $sar
    ; LX7-NEXT: [[SRL:%[0-9]+]]:gpr = SRL [[COPY]], implicit $sar
    ; LX7-NEXT: SSL [[SUB]], implicit-def $sar
    ; LX7-NEXT: [[SLL:%[0-9]+]]:gpr = SLL [[COPY1]], implicit $sar
    ; LX7-NEXT: [[OR:%[0-9]+]]:gpr = OR [[SRL]], [[SLL]]
    ; LX7-NEXT: [[SRAI:%[0-9]+]]:gpr = SRAI [[COPY1]], 31
    ; LX7-NEXT: SSR [[ADDI]], implicit-def $sar
    ; LX7-NEXT: [[SRA1:%[0-9]+]]:gpr = SRA [[COPY1]], implicit $sar
    ; LX7-NEXT: [[MOVEQZ:%[0-9]+]]:gpr = MOVEQZ [[OR]], [[SRA1]], [[SALTU]]
    ; LX7-NEXT: [[MOVEQZ1:%[0-9]+]]:gpr = MOVEQZ [[MOVEQZ]], [[COPY]], [[COPY2]]
    ; LX7-NEXT: [[MOVEQZ2:%[0-9]+]]:gpr = MOVEQZ [[SRA]], [[SRAI]], [[SALTU]]
    ; LX7-NEXT: $a2 = COPY [[MOVEQZ1]]
    ; LX7-NEXT: $a3 = COPY [[MOVEQZ2]]
    ; LX7-NEXT: RETN implicit $a0, implicit $a2, implicit $a3
    %2:gpr(s32) = COPY $a2
    %3:gpr(s32) = COPY $a3
    %4:gprb(s32) = COPY $a4
    %10:gprb(s32) = G_CONSTANT i32 32
    %13:gprb(s32) = G_SUB %4, %10
    %14:gprb(s32) = G_SUB %10, %4
    %15:gprb(s32) = G_CONSTANT i32 0
    %32:gprb(s32) = G_ICMP intpred(ult), %4(s32), %10
    %31:gprb(s32) = G_ICMP intpred(eq), %4(s32), %15
    G_XTENSA_SSR_INRANGE %4(s32), implicit-def $sar
    %18:gpr(s32) = SRA %3(s32), implicit $sar
    G_XTENSA_SSR_INRANGE %4(s32), implicit-def $sar
    %19:gpr(s32) = SRL %2(s32), implicit $sar
    G_XTENSA_SSL_INRANGE %14(s32), implicit-def $sar
    %20:gpr(s32) = SLL %3(s32), implicit $sar
    %21:gprb(s32) = G_OR %19, %20
    %22:gprb(s32) = G_CONSTANT i32 31
    %23:gprb(s32) = G_ASHR %3, %22(s32)
    G_XTENSA_SSR_INRANGE %13(s32), implicit-def $sar
    %24:gpr(s32) = SRA %3(s32), implicit $sar
    %25:gprb(s32) = G_SELECT %32(s32), %21, %24
    %26:gprb(s32) = G_SELECT %31(s32), %2, %25
    %27:gprb(s32) = G_SELECT %32(s32), %18, %23
    $a2 = COPY %26(s32)
    $a3 = COPY %27(s32)
    RETN implicit $a0, implicit $a2, implicit $a3

...
